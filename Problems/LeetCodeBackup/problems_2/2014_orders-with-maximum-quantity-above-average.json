{
    "id": "2014",
    "question": {
        "questionId": "2014",
        "questionFrontendId": "1867",
        "boundTopicId": null,
        "title": "Orders With Maximum Quantity Above Average",
        "titleSlug": "orders-with-maximum-quantity-above-average",
        "content": "<p>Table: <code>OrdersDetails</code></p>\n\n<pre>\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| order_id    | int  |\n| product_id  | int  |\n| quantity    | int  |\n+-------------+------+\n(order_id, product_id) is the primary key for this table.\nA single order is represented as multiple rows, one row for each product in the order.\nEach row of this table contains the quantity ordered of the product product_id in the order order_id.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>You are running an e-commerce site that is looking for <strong>imbalanced orders</strong>. An <strong>imbalanced order</strong> is one whose <strong>maximum</strong> quantity is <strong>strictly greater</strong> than the <strong>average</strong> quantity of <strong>every order (including itself)</strong>.</p>\n\n<p>The <strong>average </strong>quantity of an order is calculated as <code>(total quantity of all products in the order) / (number of different products in the order)</code>. The <strong>maximum</strong> quantity of an order is the highest <code>quantity</code> of any single product in the order.</p>\n\n<p>Write an SQL query to find the <code>order_id</code> of all <strong>imbalanced orders</strong>.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nOrdersDetails table:\n+----------+------------+----------+\n| order_id | product_id | quantity |\n+----------+------------+----------+\n| 1        | 1          | 12       |\n| 1        | 2          | 10       |\n| 1        | 3          | 15       |\n| 2        | 1          | 8        |\n| 2        | 4          | 4        |\n| 2        | 5          | 6        |\n| 3        | 3          | 5        |\n| 3        | 4          | 18       |\n| 4        | 5          | 2        |\n| 4        | 6          | 8        |\n| 5        | 7          | 9        |\n| 5        | 8          | 9        |\n| 3        | 9          | 20       |\n| 2        | 9          | 4        |\n+----------+------------+----------+\n<strong>Output:</strong> \n+----------+\n| order_id |\n+----------+\n| 1        |\n| 3        |\n+----------+\n<strong>Explanation:</strong> \nThe average quantity of each order is:\n- order_id=1: (12+10+15)/3 = 12.3333333\n- order_id=2: (8+4+6+4)/4 = 5.5\n- order_id=3: (5+18+20)/3 = 14.333333\n- order_id=4: (2+8)/2 = 5\n- order_id=5: (9+9)/2 = 9\n\nThe maximum quantity of each order is:\n- order_id=1: max(12, 10, 15) = 15\n- order_id=2: max(8, 4, 6, 4) = 8\n- order_id=3: max(5, 18, 20) = 20\n- order_id=4: max(2, 8) = 8\n- order_id=5: max(9, 9) = 9\n\nOrders 1 and 3 are imbalanced because they have a maximum quantity that exceeds the average quantity of every order.\n</pre>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Medium",
        "likes": 46,
        "dislikes": 152,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "{\"headers\": {\"OrdersDetails\": [\"order_id\", \"product_id\", \"quantity\"]}, \"rows\": {\"OrdersDetails\": [[1 ,1, 12], [1 ,2, 10], [1 ,3, 15], [2 ,1, 8], [2 ,4, 4], [2 ,5, 6], [3 , 3, 5], [3 ,4, 18], [4 ,5, 2], [4 ,6, 8], [5 ,7, 9], [5 ,8, 9], [3 ,9, 20], [2 ,9, 4]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"1\": [], \"2\": [], \"3\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"8.5K\", \"totalSubmission\": \"11.3K\", \"totalAcceptedRaw\": 8524, \"totalSubmissionRaw\": 11330, \"acRate\": \"75.2%\"}",
        "hints": [],
        "solution": null,
        "status": null,
        "sampleTestCase": "{\"headers\": {\"OrdersDetails\": [\"order_id\", \"product_id\", \"quantity\"]}, \"rows\": {\"OrdersDetails\": [[1 ,1, 12], [1 ,2, 10], [1 ,3, 15], [2 ,1, 8], [2 ,4, 4], [2 ,5, 6], [3 , 3, 5], [3 ,4, 18], [4 ,5, 2], [4 ,6, 8], [5 ,7, 9], [5 ,8, 9], [3 ,9, 20], [2 ,9, 4]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists OrdersDetails (order_id int, product_id int, quantity int)\"\n  ],\n  \"mssql\": [\n    \"Create table OrdersDetails (order_id int, product_id int, quantity int)\"\n  ],\n  \"oraclesql\": [\n    \"Create table OrdersDetails (order_id int, product_id int, quantity int)\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists OrdersDetails (order_id int, product_id int, quantity int)",
            "Truncate table OrdersDetails",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('1', '1', '12')",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('1', '2', '10')",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('1', '3', '15')",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('2', '1', '8')",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('2', '4', '4')",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('2', '5', '6')",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('3', '3', '5')",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('3', '4', '18')",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('4', '5', '2')",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('4', '6', '8')",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('5', '7', '9')",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('5', '8', '9')",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('3', '9', '20')",
            "insert into OrdersDetails (order_id, product_id, quantity) values ('2', '9', '4')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "orders-with-maximum-quantity-above-average",
    "playgroundData": null
}