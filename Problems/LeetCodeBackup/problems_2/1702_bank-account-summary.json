{
    "id": "1702",
    "question": {
        "questionId": "1702",
        "questionFrontendId": "1555",
        "boundTopicId": null,
        "title": "Bank Account Summary",
        "titleSlug": "bank-account-summary",
        "content": "<p>Table: <code>Users</code></p>\n\n<pre>\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| user_id      | int     |\n| user_name    | varchar |\n| credit       | int     |\n+--------------+---------+\nuser_id is the primary key for this table.\nEach row of this table contains the current credit information for each user.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Transactions</code></p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| trans_id      | int     |\n| paid_by       | int     |\n| paid_to       | int     |\n| amount        | int     |\n| transacted_on | date    |\n+---------------+---------+\ntrans_id is the primary key for this table.\nEach row of this table contains information about the transaction in the bank.\nUser with id (paid_by) transfer money to user with id (paid_to).\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Leetcode Bank (LCB) helps its coders in making virtual payments. Our bank records all transactions in the table <em>Transaction</em>, we want to find out the current balance of all users and check whether they have breached their credit limit (If their current credit is less than <code>0</code>).</p>\n\n<p>Write an SQL query to report.</p>\n\n<ul>\n\t<li><code>user_id</code>,</li>\n\t<li><code>user_name</code>,</li>\n\t<li><code>credit</code>, current balance after performing transactions, and</li>\n\t<li><code>credit_limit_breached</code>, check credit_limit (<code>&quot;Yes&quot;</code> or <code>&quot;No&quot;</code>)</li>\n</ul>\n\n<p>Return the result table in <strong>any</strong> order.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nUsers table:\n+------------+--------------+-------------+\n| user_id    | user_name    | credit      |\n+------------+--------------+-------------+\n| 1          | Moustafa     | 100         |\n| 2          | Jonathan     | 200         |\n| 3          | Winston      | 10000       |\n| 4          | Luis         | 800         | \n+------------+--------------+-------------+\nTransactions table:\n+------------+------------+------------+----------+---------------+\n| trans_id   | paid_by    | paid_to    | amount   | transacted_on |\n+------------+------------+------------+----------+---------------+\n| 1          | 1          | 3          | 400      | 2020-08-01    |\n| 2          | 3          | 2          | 500      | 2020-08-02    |\n| 3          | 2          | 1          | 200      | 2020-08-03    |\n+------------+------------+------------+----------+---------------+\n<strong>Output:</strong> \n+------------+------------+------------+-----------------------+\n| user_id    | user_name  | credit     | credit_limit_breached |\n+------------+------------+------------+-----------------------+\n| 1          | Moustafa   | -100       | Yes                   | \n| 2          | Jonathan   | 500        | No                    |\n| 3          | Winston    | 9900       | No                    |\n| 4          | Luis       | 800        | No                    |\n+------------+------------+------------+-----------------------+\n<strong>Explanation:</strong> \nMoustafa paid $400 on &quot;2020-08-01&quot; and received $200 on &quot;2020-08-03&quot;, credit (100 -400 +200) = -$100\nJonathan received $500 on &quot;2020-08-02&quot; and paid $200 on &quot;2020-08-08&quot;, credit (200 +500 -200) = $500\nWinston received $400 on &quot;2020-08-01&quot; and paid $500 on &quot;2020-08-03&quot;, credit (10000 +400 -500) = $9990\nLuis did not received any transfer, credit = $800\n</pre>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Medium",
        "likes": 98,
        "dislikes": 22,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "{\"headers\": {\"Users\": [\"user_id\", \"user_name\", \"credit\"], \"Transactions\": [\"trans_id\", \"paid_by\", \"paid_to\", \"amount\", \"transacted_on\"]}, \"rows\": {\"Users\": [[1, \"Moustafa\", 100], [2, \"Jonathan\", 200], [3, \"Winston\", 10000], [4, \"Luis\", 800]], \"Transactions\": [[1, 1, 3, 400, \"2020-08-01\"], [2, 3, 2, 500, \"2020-08-02\"], [3, 2, 1, 200, \"2020-08-03\"]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Optum\", \"slug\": \"optum\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"11.5K\", \"totalSubmission\": \"21.7K\", \"totalAcceptedRaw\": 11548, \"totalSubmissionRaw\": 21704, \"acRate\": \"53.2%\"}",
        "hints": [],
        "solution": null,
        "status": null,
        "sampleTestCase": "{\"headers\": {\"Users\": [\"user_id\", \"user_name\", \"credit\"], \"Transactions\": [\"trans_id\", \"paid_by\", \"paid_to\", \"amount\", \"transacted_on\"]}, \"rows\": {\"Users\": [[1, \"Moustafa\", 100], [2, \"Jonathan\", 200], [3, \"Winston\", 10000], [4, \"Luis\", 800]], \"Transactions\": [[1, 1, 3, 400, \"2020-08-01\"], [2, 3, 2, 500, \"2020-08-02\"], [3, 2, 1, 200, \"2020-08-03\"]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Users (user_id int, user_name varchar(20), credit int)\\n\",\n    \"Create table If Not Exists Transactions (trans_id int, paid_by int, paid_to int, amount int, transacted_on date)\"\n  ],\n  \"mssql\": [\n    \"Create table Users (user_id int, user_name varchar(20), credit int)\\n\",\n    \"Create table Transactions (trans_id int, paid_by int, paid_to int, amount int, transacted_on date)\\n\"\n  ],\n  \"oraclesql\": [\n    \"Create table Users (user_id int, user_name varchar(20), credit int)\\n\",\n    \"Create table Transactions (trans_id int, paid_by int, paid_to int, amount int, transacted_on date)\\n\",\n    \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\\n\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists Users (user_id int, user_name varchar(20), credit int)\n",
            "Create table If Not Exists Transactions (trans_id int, paid_by int, paid_to int, amount int, transacted_on date)",
            "Truncate table Users",
            "insert into Users (user_id, user_name, credit) values ('1', 'Moustafa', '100')",
            "insert into Users (user_id, user_name, credit) values ('2', 'Jonathan', '200')",
            "insert into Users (user_id, user_name, credit) values ('3', 'Winston', '10000')",
            "insert into Users (user_id, user_name, credit) values ('4', 'Luis', '800')",
            "Truncate table Transactions",
            "insert into Transactions (trans_id, paid_by, paid_to, amount, transacted_on) values ('1', '1', '3', '400', '2020-08-01')",
            "insert into Transactions (trans_id, paid_by, paid_to, amount, transacted_on) values ('2', '3', '2', '500', '2020-08-02')",
            "insert into Transactions (trans_id, paid_by, paid_to, amount, transacted_on) values ('3', '2', '1', '200', '2020-08-03')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "bank-account-summary",
    "playgroundData": null
}