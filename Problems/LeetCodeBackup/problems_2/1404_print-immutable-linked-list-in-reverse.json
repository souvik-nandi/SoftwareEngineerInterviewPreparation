{
    "id": "1404",
    "question": {
        "questionId": "1404",
        "questionFrontendId": "1265",
        "boundTopicId": null,
        "title": "Print Immutable Linked List in Reverse",
        "titleSlug": "print-immutable-linked-list-in-reverse",
        "content": "<p>You are given an immutable linked list, print out all values of each node in reverse with the help of the following&nbsp;interface:</p>\n\n<ul>\n\t<li><code>ImmutableListNode</code>:&nbsp;An interface of immutable linked list, you are given the head of the list.</li>\n</ul>\n\n<p>You need to use the following functions to access the linked list (you <strong>can&#39;t</strong> access the <code>ImmutableListNode</code> directly):</p>\n\n<ul>\n\t<li><code>ImmutableListNode.printValue()</code>: Print value of the current node.</li>\n\t<li><code>ImmutableListNode.getNext()</code>: Return the next node.</li>\n</ul>\n\n<p>The input is only given to initialize the linked list internally.&nbsp;You must solve this problem without modifying the linked list. In other words, you must operate&nbsp;the linked list using only the mentioned&nbsp;APIs.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,2,3,4]\n<strong>Output:</strong> [4,3,2,1]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [0,-4,-1,3,-5]\n<strong>Output:</strong> [-5,3,-1,-4,0]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [-2,0,6,4,4,-6]\n<strong>Output:</strong> [-6,4,4,6,0,-2]\n</pre>\n\n<ul>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The length of the linked list&nbsp;is between <code>[1, 1000]</code>.</li>\n\t<li>The value of each&nbsp;node in the linked list&nbsp;is between <code>[-1000, 1000]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Follow up:</strong></p>\n\n<p>Could you solve this problem in:</p>\n\n<ul>\n\t<li>Constant space complexity?</li>\n\t<li>Linear time complexity and less than linear space complexity?</li>\n</ul>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Medium",
        "likes": 452,
        "dislikes": 80,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "[1,2,3,4]\n[0,-4,-1,3,-5]\n[-2,0,6,4,4,-6]",
        "categoryTitle": "Algorithms",
        "contributors": [],
        "topicTags": [
            {
                "name": "Linked List",
                "slug": "linked-list",
                "translatedName": null,
                "__typename": "TopicTagNode"
            },
            {
                "name": "Two Pointers",
                "slug": "two-pointers",
                "translatedName": null,
                "__typename": "TopicTagNode"
            },
            {
                "name": "Stack",
                "slug": "stack",
                "translatedName": null,
                "__typename": "TopicTagNode"
            },
            {
                "name": "Recursion",
                "slug": "recursion",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"3\": [{\"taggedByAdmin\": false, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 2}], \"2\": [{\"taggedByAdmin\": false, \"name\": \"Facebook\", \"slug\": \"facebook\", \"timesEncountered\": 4}], \"1\": []}",
        "codeSnippets": [
            {
                "lang": "C++",
                "langSlug": "cpp",
                "code": "/**\n * // This is the ImmutableListNode's API interface.\n * // You should not implement it, or speculate about its implementation.\n * class ImmutableListNode {\n * public:\n *    void printValue(); // print the value of the node.\n *    ImmutableListNode* getNext(); // return the next node.\n * };\n */\n\nclass Solution {\npublic:\n    void printLinkedListInReverse(ImmutableListNode* head) {\n        \n    }\n};",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Java",
                "langSlug": "java",
                "code": "/**\n * // This is the ImmutableListNode's API interface.\n * // You should not implement it, or speculate about its implementation.\n * interface ImmutableListNode {\n *     public void printValue(); // print the value of this node.\n *     public ImmutableListNode getNext(); // return the next node.\n * };\n */\n\nclass Solution {\n    public void printLinkedListInReverse(ImmutableListNode head) {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Python",
                "langSlug": "python",
                "code": "#   \"\"\"\n#   This is the ImmutableListNode's API interface.\n#   You should not implement it, or speculate about its implementation.\n#   \"\"\"\n#   class ImmutableListNode(object):\n#      def printValue(self): # print the value of this node.\n# .        \"\"\"\n#          :rtype None\n#          \"\"\"\n#\n#      def getNext(self): # return the next node.\n# .        \"\"\"\n#          :rtype ImmutableListNode\n#          \"\"\"\n\nclass Solution(object):\n    def printLinkedListInReverse(self, head):\n        \"\"\"\n        :type head: ImmutableListNode\n        :rtype: None\n        \"\"\"\n\t\t",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Python3",
                "langSlug": "python3",
                "code": "# \"\"\"\n# This is the ImmutableListNode's API interface.\n# You should not implement it, or speculate about its implementation.\n# \"\"\"\n# class ImmutableListNode:\n#     def printValue(self) -> None: # print the value of this node.\n#     def getNext(self) -> 'ImmutableListNode': # return the next node.\n\nclass Solution:\n    def printLinkedListInReverse(self, head: 'ImmutableListNode') -> None:\n        ",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "C",
                "langSlug": "c",
                "code": "/**\n * Definition for ImmutableListNode.\n * struct ImmutableListNode {\n *     struct ImmutableListNode* (*getNext)(struct ImmutableListNode*); // return the next node.\n *     void (*printValue)(struct ImmutableListNode*); // print the value of the node.\n * };\n */\n\nvoid printLinkedListInReverse(struct ImmutableListNode* head) {\n    \n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "C#",
                "langSlug": "csharp",
                "code": "/**\n * // This is the ImmutableListNode's API interface.\n * // You should not implement it, or speculate about its implementation.\n * class ImmutableListNode {\n *     public void PrintValue(); // print the value of this node.\n *     public ImmutableListNode GetNext(); // return the next node.\n * }\n */\n\npublic class Solution {\n    public void PrintLinkedListInReverse(ImmutableListNode head) {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "JavaScript",
                "langSlug": "javascript",
                "code": "/**\n * // This is the ImmutableListNode's API interface.\n * // You should not implement it, or speculate about its implementation.\n * function ImmutableListNode() {\n *    @ return {void}\n *    this.printValue = function() { // print the value of this node.\n *       ...\n *    }; \n *\n *    @return {ImmutableListNode}\n *    this.getNext = function() { // return the next node.\n *       ...\n *    };\n * };\n */\n\n/**\n * @param {ImmutableListNode} head\n * @return {void}\n */\nvar printLinkedListInReverse = function(head) {\n    \n};",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Ruby",
                "langSlug": "ruby",
                "code": "#   This is the ImmutableListNode's API interface.\n#   You should not implement it, or speculate about its implementation.\n#\n#   class ImmutableListNode\n#      def printValue()\n# .        print the value of this node.\n#      def end\n#          \"\"\"\n#\n#      def getNext()\n# .        return the next node.\n#      end\n#   end\n\ndef printLinkedListInReverse(head)\n    \nend",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Swift",
                "langSlug": "swift",
                "code": "/**\n * Definition for ImmutableListNode.\n * public class ImmutableListNode {\n *     public func printValue() {}\n *     public func getNext() -> ImmutableListNode? {}\n * }\n */\n\nclass Solution {\n    func printLinkedListInReverse(_ head: ImmutableListNode?) {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Go",
                "langSlug": "golang",
                "code": "/*   Below is the interface for ImmutableListNode, which is already defined for you.\n *\n *   type ImmutableListNode struct {\n *       \n *   }\n *\n *   func (this *ImmutableListNode) getNext() ImmutableListNode {\n *\t\t// return the next node.\n *   }\n *\n *   func (this *ImmutableListNode) printValue() {\n *\t\t// print the value of this node.\n *   }\n */\n\nfunc printLinkedListInReverse(head ImmutableListNode) {\n    \n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Scala",
                "langSlug": "scala",
                "code": "/**\n * // This is the ImmutableListNode's API interface.\n * // You should not implement it, or speculate about its implementation.\n * class ImmutableListNode{\n *     def printValue(): Unit = {} // print the value of this node.\n *     def getNext(): ImmutableListNode = {} // return the next node.\n * };\n */\n\nobject Solution {\n    def printLinkedListInReverse(head: ImmutableListNode): Unit = {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Kotlin",
                "langSlug": "kotlin",
                "code": "/**\n * // This is the ImmutableListNode's API interface.\n * // You should not implement it, or speculate about its implementation.\n * class ImmutableListNode {\n *     fun getNext(): ImmutableListNode? {} // return the next node.\n *     fun printValue() {} // print the value of this node.\n * };\n */\n\nclass Solution {\n\tfun printLinkedListInReverse(head:ImmutableListNode?) {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "PHP",
                "langSlug": "php",
                "code": "/**\n * // This is the ImmutableListNode's API interface.\n * // You should not implement it, or speculate about its implementation.\n * class ImmutableListNode {\n *     public function printValue() {} // print the value of this node.\n *     public function getNext() {} // return the next node.\n * };\n */\n\nclass Solution {\n    /**\n     * @param  ImmutableListNode  $head\n     * @return void\n     */\n    function printLinkedListInReverse($head) {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "TypeScript",
                "langSlug": "typescript",
                "code": "/**\n * // This is the ImmutableListNode's API interface.\n * // You should not implement it, or speculate about its implementation\n * class ImmutableListNode {\n *      printValue() {}\n *\n *      getNext(): ImmutableListNode {}\n * }\n */\n\nfunction printLinkedListInReverse(head: ImmutableListNode) {\n\t\n};",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"42.9K\", \"totalSubmission\": \"45.5K\", \"totalAcceptedRaw\": 42863, \"totalSubmissionRaw\": 45463, \"acRate\": \"94.3%\"}",
        "hints": [],
        "solution": null,
        "status": null,
        "sampleTestCase": "[1,2,3,4]",
        "metaData": "{\n  \"name\": \"printOutLinkListinReverse\",\n  \"params\": [\n    {\n      \"name\": \"nums\",\n      \"type\": \"integer[]\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"list<integer>\"\n  },\n  \"manual\": true,\n  \"languages\": [\n    \"cpp\",\n    \"java\",\n    \"python\",\n    \"csharp\",\n    \"javascript\",\n    \"python3\",\n    \"kotlin\",\n    \"ruby\",\n    \"scala\",\n    \"php\",\n    \"golang\",\n    \"c\",\n    \"swift\",\n    \"typescript\"\n  ]\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": true,
        "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 11 </code> using the latest C++ 17 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code> OpenJDK 17 </code>. Java 8 features such as lambda expressions and stream API can be used. </p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 8.2</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-9\\\" target=\\\"_blank\\\">C# 10 with .NET 6 runtime</a></p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 16.13.2</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use <a href=\\\"https://github.com/datastructures-js/priority-queue\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and <a href=\\\"https://github.com/datastructures-js/queue\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.1</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.5.2</code>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.17.6</code>.</p>\\r\\n\\r\\n<p>Support <a href=\\\"https://godoc.org/github.com/emirpasic/gods\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.10</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 2.13.7</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.3.10</code>.</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.1</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 4.5.4, Node.js 16.13.2</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2020 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "print-immutable-linked-list-in-reverse",
    "playgroundData": null
}