{
    "id": "1495",
    "question": {
        "questionId": "1495",
        "questionFrontendId": "1364",
        "boundTopicId": null,
        "title": "Number of Trusted Contacts of a Customer",
        "titleSlug": "number-of-trusted-contacts-of-a-customer",
        "content": "<p>Table: <code>Customers</code></p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| customer_id   | int     |\n| customer_name | varchar |\n| email         | varchar |\n+---------------+---------+\ncustomer_id is the primary key for this table.\nEach row of this table contains the name and the email of a customer of an online shop.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Contacts</code></p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| user_id       | id      |\n| contact_name  | varchar |\n| contact_email | varchar |\n+---------------+---------+\n(user_id, contact_email) is the primary key for this table.\nEach row of this table contains the name and email of one contact of customer with user_id.\nThis table contains information about people each customer trust. The contact may or may not exist in the Customers table.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Invoices</code></p>\n\n<pre>\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| invoice_id   | int     |\n| price        | int     |\n| user_id      | int     |\n+--------------+---------+\ninvoice_id is the primary key for this table.\nEach row of this table indicates that user_id has an invoice with invoice_id and a price.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to find the following for each <code>invoice_id</code>:</p>\n\n<ul>\n\t<li><code>customer_name</code>: The name of the customer the invoice is related to.</li>\n\t<li><code>price</code>: The price of the invoice.</li>\n\t<li><code>contacts_cnt</code>: The number of contacts related to the customer.</li>\n\t<li><code>trusted_contacts_cnt</code>: The number of contacts related to the customer and at the same time they are customers to the shop. (i.e their email exists in the <code>Customers</code> table.)</li>\n</ul>\n\n<p>Return the result table <strong>ordered</strong> by <code>invoice_id</code>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nCustomers table:\n+-------------+---------------+--------------------+\n| customer_id | customer_name | email              |\n+-------------+---------------+--------------------+\n| 1           | Alice         | alice@leetcode.com |\n| 2           | Bob           | bob@leetcode.com   |\n| 13          | John          | john@leetcode.com  |\n| 6           | Alex          | alex@leetcode.com  |\n+-------------+---------------+--------------------+\nContacts table:\n+-------------+--------------+--------------------+\n| user_id     | contact_name | contact_email      |\n+-------------+--------------+--------------------+\n| 1           | Bob          | bob@leetcode.com   |\n| 1           | John         | john@leetcode.com  |\n| 1           | Jal          | jal@leetcode.com   |\n| 2           | Omar         | omar@leetcode.com  |\n| 2           | Meir         | meir@leetcode.com  |\n| 6           | Alice        | alice@leetcode.com |\n+-------------+--------------+--------------------+\nInvoices table:\n+------------+-------+---------+\n| invoice_id | price | user_id |\n+------------+-------+---------+\n| 77         | 100   | 1       |\n| 88         | 200   | 1       |\n| 99         | 300   | 2       |\n| 66         | 400   | 2       |\n| 55         | 500   | 13      |\n| 44         | 60    | 6       |\n+------------+-------+---------+\n<strong>Output:</strong> \n+------------+---------------+-------+--------------+----------------------+\n| invoice_id | customer_name | price | contacts_cnt | trusted_contacts_cnt |\n+------------+---------------+-------+--------------+----------------------+\n| 44         | Alex          | 60    | 1            | 1                    |\n| 55         | John          | 500   | 0            | 0                    |\n| 66         | Bob           | 400   | 2            | 0                    |\n| 77         | Alice         | 100   | 3            | 2                    |\n| 88         | Alice         | 200   | 3            | 2                    |\n| 99         | Bob           | 300   | 2            | 0                    |\n+------------+---------------+-------+--------------+----------------------+\n<strong>Explanation:</strong> \nAlice has three contacts, two of them are trusted contacts (Bob and John).\nBob has two contacts, none of them is a trusted contact.\nAlex has one contact and it is a trusted contact (Alice).\nJohn doesn&#39;t have any contacts.\n</pre>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Medium",
        "likes": 61,
        "dislikes": 296,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "{\"headers\":{\"Customers\":[\"customer_id\",\"customer_name\",\"email\"],\"Contacts\":[\"user_id\",\"contact_name\",\"contact_email\"],\"Invoices\":[\"invoice_id\",\"price\",\"user_id\"]},\"rows\":{\"Customers\":[[1,\"Alice\",\"alice@leetcode.com\"],[2,\"Bob\",\"bob@leetcode.com\"],[13,\"John\",\"john@leetcode.com\"],[6,\"Alex\",\"alex@leetcode.com\"]],\"Contacts\":[[1,\"Bob\",\"bob@leetcode.com\"],[1,\"John\",\"john@leetcode.com\"],[1,\"Jal\",\"jal@leetcode.com\"],[2,\"Omar\",\"omar@leetcode.com\"],[2,\"Meir\",\"meir@leetcode.com\"],[6,\"Alice\",\"alice@leetcode.com\"]],\"Invoices\":[[77,100,1],[88,200,1],[99,300,2],[66,400,2],[55,500,13],[44,60,6]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Roblox\", \"slug\": \"roblox\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"14K\", \"totalSubmission\": \"17.8K\", \"totalAcceptedRaw\": 14047, \"totalSubmissionRaw\": 17846, \"acRate\": \"78.7%\"}",
        "hints": [],
        "solution": null,
        "status": null,
        "sampleTestCase": "{\"headers\":{\"Customers\":[\"customer_id\",\"customer_name\",\"email\"],\"Contacts\":[\"user_id\",\"contact_name\",\"contact_email\"],\"Invoices\":[\"invoice_id\",\"price\",\"user_id\"]},\"rows\":{\"Customers\":[[1,\"Alice\",\"alice@leetcode.com\"],[2,\"Bob\",\"bob@leetcode.com\"],[13,\"John\",\"john@leetcode.com\"],[6,\"Alex\",\"alex@leetcode.com\"]],\"Contacts\":[[1,\"Bob\",\"bob@leetcode.com\"],[1,\"John\",\"john@leetcode.com\"],[1,\"Jal\",\"jal@leetcode.com\"],[2,\"Omar\",\"omar@leetcode.com\"],[2,\"Meir\",\"meir@leetcode.com\"],[6,\"Alice\",\"alice@leetcode.com\"]],\"Invoices\":[[77,100,1],[88,200,1],[99,300,2],[66,400,2],[55,500,13],[44,60,6]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Customers (customer_id int, customer_name varchar(20), email varchar(30))\",\n    \"Create table If Not Exists Contacts (user_id int, contact_name varchar(20), contact_email varchar(30))\",\n    \"Create table If Not Exists Invoices (invoice_id int, price int, user_id int)\"\n  ],\n  \"mssql\": [\n    \"Create table Customers (customer_id int, customer_name varchar(20), email varchar(30))\",\n    \"Create table Contacts (user_id int, contact_name varchar(20), contact_email varchar(30))\",\n    \"Create table Invoices (invoice_id int, price int, user_id int)\"\n  ],\n  \"oraclesql\": [\n    \"Create table Customers (customer_id int, customer_name varchar(20), email varchar(30))\",\n    \"Create table Contacts (user_id int, contact_name varchar(20), contact_email varchar(30))\",\n    \"Create table Invoices (invoice_id int, price int, user_id int)\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists Customers (customer_id int, customer_name varchar(20), email varchar(30))",
            "Create table If Not Exists Contacts (user_id int, contact_name varchar(20), contact_email varchar(30))",
            "Create table If Not Exists Invoices (invoice_id int, price int, user_id int)",
            "Truncate table Customers",
            "insert into Customers (customer_id, customer_name, email) values ('1', 'Alice', 'alice@leetcode.com')",
            "insert into Customers (customer_id, customer_name, email) values ('2', 'Bob', 'bob@leetcode.com')",
            "insert into Customers (customer_id, customer_name, email) values ('13', 'John', 'john@leetcode.com')",
            "insert into Customers (customer_id, customer_name, email) values ('6', 'Alex', 'alex@leetcode.com')",
            "Truncate table Contacts",
            "insert into Contacts (user_id, contact_name, contact_email) values ('1', 'Bob', 'bob@leetcode.com')",
            "insert into Contacts (user_id, contact_name, contact_email) values ('1', 'John', 'john@leetcode.com')",
            "insert into Contacts (user_id, contact_name, contact_email) values ('1', 'Jal', 'jal@leetcode.com')",
            "insert into Contacts (user_id, contact_name, contact_email) values ('2', 'Omar', 'omar@leetcode.com')",
            "insert into Contacts (user_id, contact_name, contact_email) values ('2', 'Meir', 'meir@leetcode.com')",
            "insert into Contacts (user_id, contact_name, contact_email) values ('6', 'Alice', 'alice@leetcode.com')",
            "Truncate table Invoices",
            "insert into Invoices (invoice_id, price, user_id) values ('77', '100', '1')",
            "insert into Invoices (invoice_id, price, user_id) values ('88', '200', '1')",
            "insert into Invoices (invoice_id, price, user_id) values ('99', '300', '2')",
            "insert into Invoices (invoice_id, price, user_id) values ('66', '400', '2')",
            "insert into Invoices (invoice_id, price, user_id) values ('55', '500', '13')",
            "insert into Invoices (invoice_id, price, user_id) values ('44', '60', '6')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "number-of-trusted-contacts-of-a-customer",
    "playgroundData": null
}