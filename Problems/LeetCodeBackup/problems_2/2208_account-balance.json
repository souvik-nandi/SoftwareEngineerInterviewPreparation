{
    "id": "2208",
    "question": {
        "questionId": "2208",
        "questionFrontendId": "2066",
        "boundTopicId": null,
        "title": "Account Balance",
        "titleSlug": "account-balance",
        "content": "<p>Table: <code>Transactions</code></p>\n\n<pre>\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| account_id  | int  |\n| day         | date |\n| type        | ENUM |\n| amount      | int  |\n+-------------+------+\n(account_id, day) is the primary key for this table.\nEach row contains information about one transaction, including the transaction type, the day it occurred on, and the amount.\ntype is an ENUM of the type (&#39;Deposit&#39;,&#39;Withdraw&#39;) \n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to report the balance of each user after each transaction. You may assume that the balance of each account before any transaction is <code>0</code> and that the balance will never be below <code>0</code> at any moment.</p>\n\n<p>Return the result table <strong>in ascending order</strong> by <code>account_id</code>, then by <code>day</code> in case of a tie.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nTransactions table:\n+------------+------------+----------+--------+\n| account_id | day        | type     | amount |\n+------------+------------+----------+--------+\n| 1          | 2021-11-07 | Deposit  | 2000   |\n| 1          | 2021-11-09 | Withdraw | 1000   |\n| 1          | 2021-11-11 | Deposit  | 3000   |\n| 2          | 2021-12-07 | Deposit  | 7000   |\n| 2          | 2021-12-12 | Withdraw | 7000   |\n+------------+------------+----------+--------+\n<strong>Output:</strong> \n+------------+------------+---------+\n| account_id | day        | balance |\n+------------+------------+---------+\n| 1          | 2021-11-07 | 2000    |\n| 1          | 2021-11-09 | 1000    |\n| 1          | 2021-11-11 | 4000    |\n| 2          | 2021-12-07 | 7000    |\n| 2          | 2021-12-12 | 0       |\n+------------+------------+---------+\n<strong>Explanation:</strong> \nAccount 1:\n- Initial balance is 0.\n- 2021-11-07 --&gt; deposit 2000. Balance is 0 + 2000 = 2000.\n- 2021-11-09 --&gt; withdraw 1000. Balance is 2000 - 1000 = 1000.\n- 2021-11-11 --&gt; deposit 3000. Balance is 1000 + 3000 = 4000.\nAccount 2:\n- Initial balance is 0.\n- 2021-12-07 --&gt; deposit 7000. Balance is 0 + 7000 = 7000.\n- 2021-12-12 --&gt; withdraw 7000. Balance is 7000 - 7000 = 0.\n</pre>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Medium",
        "likes": 38,
        "dislikes": 1,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "{\"headers\":{\"Transactions\":[\"account_id\",\"day\",\"type\",\"amount\"]},\"rows\":{\"Transactions\":[[1,\"2021-11-07\",\"Deposit\",2000],[1,\"2021-11-09\",\"Withdraw\",1000],[1,\"2021-11-11\",\"Deposit\",3000],[2,\"2021-12-07\",\"Deposit\",7000],[2,\"2021-12-12\",\"Withdraw\",7000]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"1\": [], \"2\": [], \"3\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"4.1K\", \"totalSubmission\": \"4.8K\", \"totalAcceptedRaw\": 4138, \"totalSubmissionRaw\": 4846, \"acRate\": \"85.4%\"}",
        "hints": [],
        "solution": null,
        "status": null,
        "sampleTestCase": "{\"headers\":{\"Transactions\":[\"account_id\",\"day\",\"type\",\"amount\"]},\"rows\":{\"Transactions\":[[1,\"2021-11-07\",\"Deposit\",2000],[1,\"2021-11-09\",\"Withdraw\",1000],[1,\"2021-11-11\",\"Deposit\",3000],[2,\"2021-12-07\",\"Deposit\",7000],[2,\"2021-12-12\",\"Withdraw\",7000]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Transactions (account_id int, day date, type ENUM('Deposit', 'Withdraw'), amount int)\"\n  ],\n  \"mssql\": [\n    \"Create table Transactions (account_id int, day date, type varchar(8) NOT NULL CHECK (type IN('Deposit', 'Withdraw')), amount int)\"\n  ],\n  \"oraclesql\": [\n    \"Create table Transactions (account_id int, day date, type varchar(8) NOT NULL CHECK (type IN('Deposit', 'Withdraw')), amount int)\",\n    \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists Transactions (account_id int, day date, type ENUM('Deposit', 'Withdraw'), amount int)",
            "Truncate table Transactions",
            "insert into Transactions (account_id, day, type, amount) values ('1', '2021-11-07', 'Deposit', '2000')",
            "insert into Transactions (account_id, day, type, amount) values ('1', '2021-11-09', 'Withdraw', '1000')",
            "insert into Transactions (account_id, day, type, amount) values ('1', '2021-11-11', 'Deposit', '3000')",
            "insert into Transactions (account_id, day, type, amount) values ('2', '2021-12-07', 'Deposit', '7000')",
            "insert into Transactions (account_id, day, type, amount) values ('2', '2021-12-12', 'Withdraw', '7000')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "account-balance",
    "playgroundData": null
}