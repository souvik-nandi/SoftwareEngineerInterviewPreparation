{
    "id": "1454",
    "question": {
        "questionId": "1454",
        "questionFrontendId": "1332",
        "boundTopicId": null,
        "title": "Remove Palindromic Subsequences",
        "titleSlug": "remove-palindromic-subsequences",
        "content": "<p>You are given a string <code>s</code> consisting <strong>only</strong> of letters <code>&#39;a&#39;</code> and <code>&#39;b&#39;</code>. In a single step you can remove one <strong>palindromic subsequence</strong> from <code>s</code>.</p>\n\n<p>Return <em>the <strong>minimum</strong> number of steps to make the given string empty</em>.</p>\n\n<p>A string is a <strong>subsequence</strong> of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does <strong>not</strong> necessarily need to be contiguous.</p>\n\n<p>A string is called <strong>palindrome</strong> if is one that reads the same backward as well as forward.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;ababa&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> s is already a palindrome, so its entirety can be removed in a single step.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abb&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> &quot;<u>a</u>bb&quot; -&gt; &quot;<u>bb</u>&quot; -&gt; &quot;&quot;. \nRemove palindromic subsequence &quot;a&quot; then &quot;bb&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;baabb&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> &quot;<u>baa</u>b<u>b</u>&quot; -&gt; &quot;<u>b</u>&quot; -&gt; &quot;&quot;. \nRemove palindromic subsequence &quot;baab&quot; then &quot;b&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length &lt;= 1000</code></li>\n\t<li><code>s[i]</code> is either <code>&#39;a&#39;</code> or <code>&#39;b&#39;</code>.</li>\n</ul>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": false,
        "difficulty": "Easy",
        "likes": 1315,
        "dislikes": 1412,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "\"ababa\"\n\"abb\"\n\"baabb\"",
        "categoryTitle": "Algorithms",
        "contributors": [],
        "topicTags": [
            {
                "name": "Two Pointers",
                "slug": "two-pointers",
                "translatedName": null,
                "__typename": "TopicTagNode"
            },
            {
                "name": "String",
                "slug": "string",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"3\": [{\"taggedByAdmin\": false, \"name\": \"Yahoo\", \"slug\": \"yahoo\", \"timesEncountered\": 2}, {\"taggedByAdmin\": true, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 0}], \"1\": [{\"taggedByAdmin\": false, \"name\": \"Bloomberg\", \"slug\": \"bloomberg\", \"timesEncountered\": 3}], \"2\": [{\"taggedByAdmin\": false, \"name\": \"Apple\", \"slug\": \"apple\", \"timesEncountered\": 2}]}",
        "codeSnippets": [
            {
                "lang": "C++",
                "langSlug": "cpp",
                "code": "class Solution {\npublic:\n    int removePalindromeSub(string s) {\n        \n    }\n};",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Java",
                "langSlug": "java",
                "code": "class Solution {\n    public int removePalindromeSub(String s) {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Python",
                "langSlug": "python",
                "code": "class Solution(object):\n    def removePalindromeSub(self, s):\n        \"\"\"\n        :type s: str\n        :rtype: int\n        \"\"\"\n        ",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Python3",
                "langSlug": "python3",
                "code": "class Solution:\n    def removePalindromeSub(self, s: str) -> int:\n        ",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "C",
                "langSlug": "c",
                "code": "\n\nint removePalindromeSub(char * s){\n\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "C#",
                "langSlug": "csharp",
                "code": "public class Solution {\n    public int RemovePalindromeSub(string s) {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "JavaScript",
                "langSlug": "javascript",
                "code": "/**\n * @param {string} s\n * @return {number}\n */\nvar removePalindromeSub = function(s) {\n    \n};",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Ruby",
                "langSlug": "ruby",
                "code": "# @param {String} s\n# @return {Integer}\ndef remove_palindrome_sub(s)\n    \nend",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Swift",
                "langSlug": "swift",
                "code": "class Solution {\n    func removePalindromeSub(_ s: String) -> Int {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Go",
                "langSlug": "golang",
                "code": "func removePalindromeSub(s string) int {\n    \n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Scala",
                "langSlug": "scala",
                "code": "object Solution {\n    def removePalindromeSub(s: String): Int = {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Kotlin",
                "langSlug": "kotlin",
                "code": "class Solution {\n    fun removePalindromeSub(s: String): Int {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Rust",
                "langSlug": "rust",
                "code": "impl Solution {\n    pub fn remove_palindrome_sub(s: String) -> i32 {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "PHP",
                "langSlug": "php",
                "code": "class Solution {\n\n    /**\n     * @param String $s\n     * @return Integer\n     */\n    function removePalindromeSub($s) {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "TypeScript",
                "langSlug": "typescript",
                "code": "function removePalindromeSub(s: string): number {\n\n};",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Racket",
                "langSlug": "racket",
                "code": "(define/contract (remove-palindrome-sub s)\n  (-> string? exact-integer?)\n\n  )",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Erlang",
                "langSlug": "erlang",
                "code": "-spec remove_palindrome_sub(S :: unicode:unicode_binary()) -> integer().\nremove_palindrome_sub(S) ->\n  .",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Elixir",
                "langSlug": "elixir",
                "code": "defmodule Solution do\n  @spec remove_palindrome_sub(s :: String.t) :: integer\n  def remove_palindrome_sub(s) do\n\n  end\nend",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"107.9K\", \"totalSubmission\": \"142.1K\", \"totalAcceptedRaw\": 107930, \"totalSubmissionRaw\": 142131, \"acRate\": \"75.9%\"}",
        "hints": [
            "Use the fact that string contains only 2 characters.",
            "Are subsequences composed of only one type of letter always palindrome strings ?"
        ],
        "solution": {
            "id": "864",
            "canSeeDetail": true,
            "paidOnly": true,
            "hasVideoSolution": false,
            "paidOnlyVideo": true,
            "__typename": "ArticleNode"
        },
        "status": null,
        "sampleTestCase": "\"ababa\"",
        "metaData": "{\n  \"name\": \"removePalindromeSub\",\n  \"params\": [\n    {\n      \"name\": \"s\",\n      \"type\": \"string\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  }\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": true,
        "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 11 </code> using the latest C++ 17 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code> OpenJDK 17 </code>. Java 8 features such as lambda expressions and stream API can be used. </p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"c\": [\"C\", \"<p>Compiled with <code>gcc 8.2</code> using the gnu11 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level one optimization (<code>-O1</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n\\r\\n<p>For hash table operations, you may use <a href=\\\"https://troydhanson.github.io/uthash/\\\" target=\\\"_blank\\\">uthash</a>. \\\"uthash.h\\\" is included by default. Below are some examples:</p>\\r\\n\\r\\n<p><b>1. Adding an item to a hash.</b>\\r\\n<pre>\\r\\nstruct hash_entry {\\r\\n    int id;            /* we'll use this field as the key */\\r\\n    char name[10];\\r\\n    UT_hash_handle hh; /* makes this structure hashable */\\r\\n};\\r\\n\\r\\nstruct hash_entry *users = NULL;\\r\\n\\r\\nvoid add_user(struct hash_entry *s) {\\r\\n    HASH_ADD_INT(users, id, s);\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>2. Looking up an item in a hash:</b>\\r\\n<pre>\\r\\nstruct hash_entry *find_user(int user_id) {\\r\\n    struct hash_entry *s;\\r\\n    HASH_FIND_INT(users, &user_id, s);\\r\\n    return s;\\r\\n}\\r\\n</pre>\\r\\n</p>\\r\\n\\r\\n<p><b>3. Deleting an item in a hash:</b>\\r\\n<pre>\\r\\nvoid delete_user(struct hash_entry *user) {\\r\\n    HASH_DEL(users, user);  \\r\\n}\\r\\n</pre>\\r\\n</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-9\\\" target=\\\"_blank\\\">C# 10 with .NET 6 runtime</a></p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 16.13.2</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use <a href=\\\"https://github.com/datastructures-js/priority-queue\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and <a href=\\\"https://github.com/datastructures-js/queue\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"ruby\": [\"Ruby\", \"<p><code>Ruby 3.1</code></p>\\r\\n\\r\\n<p>Some common data structure implementations are provided in the Algorithms module: https://www.rubydoc.info/github/kanwei/algorithms/Algorithms</p>\"], \"swift\": [\"Swift\", \"<p><code>Swift 5.5.2</code>.</p>\"], \"golang\": [\"Go\", \"<p><code>Go 1.17.6</code>.</p>\\r\\n\\r\\n<p>Support <a href=\\\"https://godoc.org/github.com/emirpasic/gods\\\" target=\\\"_blank\\\">https://godoc.org/github.com/emirpasic/gods</a> library.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.10</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"], \"scala\": [\"Scala\", \"<p><code>Scala 2.13.7</code>.</p>\"], \"kotlin\": [\"Kotlin\", \"<p><code>Kotlin 1.3.10</code>.</p>\"], \"rust\": [\"Rust\", \"<p><code>Rust 1.58.1</code></p>\\r\\n\\r\\n<p>Supports <a href=\\\"https://crates.io/crates/rand\\\" target=\\\"_blank\\\">rand </a> v0.6\\u00a0from crates.io</p>\"], \"php\": [\"PHP\", \"<p><code>PHP 8.1</code>.</p>\\r\\n<p>With bcmath module</p>\"], \"typescript\": [\"Typescript\", \"<p><code>TypeScript 4.5.4, Node.js 16.13.2</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES2020 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\"], \"racket\": [\"Racket\", \"<p>Run with <code>Racket 8.3</code>.</p>\"], \"erlang\": [\"Erlang\", \"Erlang/OTP 24.2\"], \"elixir\": [\"Elixir\", \"Elixir 1.13.0 with Erlang/OTP 24.2\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": {
            "id": "943",
            "date": "2022-06-08",
            "incompleteChallengeCount": 30,
            "streakCount": 0,
            "type": "DAILY",
            "__typename": "ChallengeQuestionNode"
        },
        "__typename": "QuestionNode"
    },
    "solution": {
        "id": "864",
        "content": "[TOC]\n\n## Solution\n\n#### Overview\n\nIf you're stuck on this question, don't worry, it has fooled many people! The algorithm that solves it is indeed very easy, and all the information you require is provided in the problem statement\u2014you just need to read it very carefully and make sure you really understand the problem. This question is a great one for testing these important skills. So before reading the solution, make sure you look at the hints. Additionally, look very, very carefully at the examples, in particular example 3. It might make you realize you've made an incorrect assumption about the problem!\n\n*Clarifying what is meant by a subsequence*\n\nLet's start by making sure you're clear on the terminology around **subsequences**, as these terms come up a lot but can be confusing if you're not very familiar with them. If you're ever in doubt in an interview about what is being asked for, then ask the interviewer to clarify.\n\nA **subsequence** is obtained by deleting some characters of the string. The **subsequence** is what's left, and doesn't have to be letters that were consecutive in the original string. For example, some of the subsequences of the word `computer` are:\n\n- **co**~~m~~**p**~~uter~~ \u2192 **cop**\n- ~~com~~**put**~~er~~ \u2192 **put**\n- **co**~~m~~**p**~~ut~~**e**~~r~~ \u2192 **cope**\n- **c**~~omp~~**ut**~~er~~ \u2192 **cut**\n- ~~comput~~**e**~~r~~ \u2192 **e**\n- computer \u2192 **computer**\n\nSome of these are *also* what we call a **substring**. A **substring** is where the characters *are* consecutive in the original string. The subsequences above that are also substrings of `computer` are `put`, `e` and `computer`.\n\nA **substring** is a type of **subsequence**, but a **subsequence** is *not* a type of **substring**. This also means that if the word **substring** is used, then you know for sure what it means, but if the word **subsequence** is used then you might need to ask for clarification, because it could be either. So in an interview, if you're asked to find **subsequences**, then clarify with the interviewer whether or not those subsequences have to also be substrings.\n\nHere on Leetcode, either the problem statement will clarify what is intended, or at least one of the examples will.\n\nFor this question, the subsequence does *not* need to be consecutive. We can determine this by looking closely at example 3.\n\n*Coming up with an algorithm*\n\nA palindrome is a word that reads the same from front to back. For example, `lol`, `radar`, `a`, and `oooo`. We need to remove palindromic subsequences from the given string until it's empty, and we need to minimize how many of these removals we do.\n\nThe key observation to make is that any sequence of the same letter is a palindrome. For example `a`, `aa`, `aaa`, `aaaaaaaa`, etc. Because there are only 2 unique letters that can appear in the string, we know we can *always* solve the problem with at most 2 steps. i.e.\n\n1. Remove all the `a`'s as a single palindromic subsequence.\n2. Remove all the `b`'s as a single palindromic subsequence.\n\nThis leaves us with only 3 possible answers for any given string: `0`, `1`, or `2`. We will need to classify each string we're given into one of these 3 categories. If you haven't yet solved the problem, have another think about how you could do this before you read on.\n\nAn answer of `0` would mean we didn't need to remove any subsequences. The only case we don't need to remove any subsequences is when the string is empty to begin with. Therefore, the first part of algorithm should be:\n\n```\nif s is an empty string:\n    return 0\n```\n\nNow, what about `1`? This would mean we only need to remove a single palindromic subsequence to get to an empty string. The only way this is possible is if the entire string is a palindrome.\n\n```\nif s is a palindrome:\n    return 1\n```\n\nThat leaves `2`. If the input string is non-empty, and it is not a palindrome, then we would have to firstly remove the `a`'s and then secondly remove the `b`'s. So if neither of the first 2 cases apply, we can simply return 2.\n\n```\nreturn 2\n```\n\nThe first and third cases are straightforward, but the second case will require us to write some more code to check if `s` is a palindrome. The only difference between the approaches discussed below is how this palindrome check is done.\n\n<br />\n\n---\n\n#### Approach 1: Palindrome Check by Reversing String\n\n**Intuition**\n\nA palindrome is simply a string that reads the same backwards as it does forwards. i.e. if you reverse the letters in the string, you'll still have the same word. Therefore, the simplest way to check if a string is a palindrome is to reverse it. We can do the reversing using library functions.\n\n**Algorithm**\n\n*For Python programmers*: `s[::-1]` is the simplest way of reversing a string.\n\n*For Java programmers*: there is no really simple way of reversing a `String`. Instead, you'll need to convert the `String` into a `StringBuilder` (a mutable string), reverse it, and then convert it back into a `String`.\n\n<iframe src=\"https://leetcode.com/playground/2P4LJkfF/shared\" frameBorder=\"0\" width=\"100%\" height=\"310\" name=\"2P4LJkfF\"></iframe>\n\nFor the Java code, you can also do the string reversing as a one-liner. This is a common pattern.\n\n<iframe src=\"https://leetcode.com/playground/TuPig5GE/shared\" frameBorder=\"0\" width=\"100%\" height=\"259\" name=\"TuPig5GE\"></iframe>\n\n**Complexity Analysis**\n\nLet $$n$$ be the length of the input string.\n\n- Time Complexity : $$O(n)$$.\n\n    Reversing a string using the library methods above has a cost of $$O(n)$$. Checking if 2 strings are equal is also $$O(n)$$. Therefore, the overall function is $$O(n)$$.\n\n    Be careful about doing the reversing yourself. Many na\u00efve string reversing algorithms people write actually have a cost of $$O(n^2)$$.\n\n- Space Complexity : $$O(n)$$.\n\n    Reversing a string creates a second string the same length as the first. Therefore, this algorithm requires $$O(n)$$ space.\n\nTo learn about writing good algorithms to reverse a string, check out the [Solution Article for Reverse String](https://leetcode.com/problems/reverse-string/solution/).\n\n<br />\n\n---\n\n#### Approach 2: Palindrome Check with Two-Pointer Technique\n\n**Intuition**\n\nThe approach above solved the problem, but it required $$O(n)$$ space. Another way of checking whether or not a string is a palindrome is to use the two-pointer technique.\n\n**Algorithm**\n\nFor code readability, it's best to put the logic for checking whether or not a string is a palindrome into a separate function.\n\n<iframe src=\"https://leetcode.com/playground/fMMTBUs2/shared\" frameBorder=\"0\" width=\"100%\" height=\"463\" name=\"fMMTBUs2\"></iframe>\n\n\n**Complexity Analysis**\n\nLet $$n$$ be the length of the input string.\n\n- Time Complexity : $$O(n)$$.\n\n    The loop in the `isPalindrome(...)` function loops up to $$\\frac{n}{2}$$ times, each time checking whether or not the characters at indexes `hi` and `lo` are equal. The division by `2` is treated as a constant so removed, and we're left with $$O(n)$$.\n\n- Space Complexity : $$O(1)$$.\n\n    We aren't creating any new data structures or string copies, so the total memory usage is $$O(1)$$.\n\nThis approach might not be considered as better than the first approach in practice though. While the space complexity is lower, (and the actual time taken will probably be lower by a constant amount too), the code is more complex and takes longer to write. If you knew $$n$$ was always going to be small, the first approach would be best.\n\n<br />",
        "contentTypeId": "107",
        "canSeeDetail": true,
        "paidOnly": true,
        "hasVideoSolution": false,
        "paidOnlyVideo": true,
        "rating": {
            "id": "822",
            "count": 82,
            "average": "4.720",
            "userRating": null,
            "__typename": "RatingNode"
        },
        "__typename": "ArticleNode"
    },
    "questionCode": "remove-palindromic-subsequences",
    "playgroundData": {
        "2P4LJkfF": {
            "playground": {
                "testcaseInput": "",
                "name": "remove-palindrome-subsequences-2",
                "isUserOwner": false,
                "isLive": false,
                "showRunCode": false,
                "showOpenInPlayground": false,
                "selectedLangSlug": "cpp",
                "isShared": true,
                "__typename": "PlaygroundNode"
            },
            "allPlaygroundCodes": [
                {
                    "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        for (int i = 0; i < nums.length; i++) {\n            for (int j = i + 1; j < nums.length; j++) {\n                if (nums[j] == target - nums[i]) {\n                    return new int[] { i, j };\n                }\n            }\n        }\n        // In case there is no solution, we'll just return null\n        return null;\n    }\n}",
                    "langSlug": "java",
                    "__typename": "PlaygroundCodeNode"
                },
                {
                    "code": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        for i in range(len(nums)):\n            for j in range(i + 1, len(nums)):\n                if nums[j] == target - nums[i]:\n                    return [i, j]",
                    "langSlug": "python3",
                    "__typename": "PlaygroundCodeNode"
                }
            ]
        },
        "TuPig5GE": {
            "playground": {
                "testcaseInput": "",
                "name": "remove-palindrome-subsequences-1",
                "isUserOwner": false,
                "isLive": false,
                "showRunCode": false,
                "showOpenInPlayground": false,
                "selectedLangSlug": "cpp",
                "isShared": true,
                "__typename": "PlaygroundNode"
            },
            "allPlaygroundCodes": [
                {
                    "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        for (int i = 0; i < nums.length; i++) {\n            for (int j = i + 1; j < nums.length; j++) {\n                if (nums[j] == target - nums[i]) {\n                    return new int[] { i, j };\n                }\n            }\n        }\n        // In case there is no solution, we'll just return null\n        return null;\n    }\n}",
                    "langSlug": "java",
                    "__typename": "PlaygroundCodeNode"
                },
                {
                    "code": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        for i in range(len(nums)):\n            for j in range(i + 1, len(nums)):\n                if nums[j] == target - nums[i]:\n                    return [i, j]",
                    "langSlug": "python3",
                    "__typename": "PlaygroundCodeNode"
                }
            ]
        },
        "fMMTBUs2": {
            "playground": {
                "testcaseInput": "",
                "name": "remove-palindrome-subsequences-0",
                "isUserOwner": false,
                "isLive": false,
                "showRunCode": false,
                "showOpenInPlayground": false,
                "selectedLangSlug": "cpp",
                "isShared": true,
                "__typename": "PlaygroundNode"
            },
            "allPlaygroundCodes": [
                {
                    "code": "class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        for (int i = 0; i < nums.length; i++) {\n            for (int j = i + 1; j < nums.length; j++) {\n                if (nums[j] == target - nums[i]) {\n                    return new int[] { i, j };\n                }\n            }\n        }\n        // In case there is no solution, we'll just return null\n        return null;\n    }\n}",
                    "langSlug": "java",
                    "__typename": "PlaygroundCodeNode"
                },
                {
                    "code": "class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        for i in range(len(nums)):\n            for j in range(i + 1, len(nums)):\n                if nums[j] == target - nums[i]:\n                    return [i, j]",
                    "langSlug": "python3",
                    "__typename": "PlaygroundCodeNode"
                }
            ]
        }
    }
}