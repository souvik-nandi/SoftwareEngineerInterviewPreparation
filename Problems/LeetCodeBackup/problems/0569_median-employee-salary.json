{
    "id": "569",
    "question": {
        "questionId": "569",
        "questionFrontendId": "569",
        "boundTopicId": null,
        "title": "Median Employee Salary",
        "titleSlug": "median-employee-salary",
        "content": "<p>Table: <code>Employee</code></p>\n\n<pre>\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| id           | int     |\n| company      | varchar |\n| salary       | int     |\n+--------------+---------+\nid is the primary key column for this table.\nEach row of this table indicates the company and the salary of one employee.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to find the median salary of each company.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nEmployee table:\n+----+---------+--------+\n| id | company | salary |\n+----+---------+--------+\n| 1  | A       | 2341   |\n| 2  | A       | 341    |\n| 3  | A       | 15     |\n| 4  | A       | 15314  |\n| 5  | A       | 451    |\n| 6  | A       | 513    |\n| 7  | B       | 15     |\n| 8  | B       | 13     |\n| 9  | B       | 1154   |\n| 10 | B       | 1345   |\n| 11 | B       | 1221   |\n| 12 | B       | 234    |\n| 13 | C       | 2345   |\n| 14 | C       | 2645   |\n| 15 | C       | 2645   |\n| 16 | C       | 2652   |\n| 17 | C       | 65     |\n+----+---------+--------+\n<strong>Output:</strong> \n+----+---------+--------+\n| id | company | salary |\n+----+---------+--------+\n| 5  | A       | 451    |\n| 6  | A       | 513    |\n| 12 | B       | 234    |\n| 9  | B       | 1154   |\n| 14 | C       | 2645   |\n+----+---------+--------+\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you solve it without using any built-in or window functions?</p>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Hard",
        "likes": 248,
        "dislikes": 134,
        "isLiked": null,
        "similarQuestions": "[{\"title\": \"Find Median Given Frequency of Numbers\", \"titleSlug\": \"find-median-given-frequency-of-numbers\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "exampleTestcases": "{\"headers\": {\"Employee\": [\"id\", \"company\", \"salary\"]}, \"rows\": {\"Employee\": [[1, \"A\", 2341],[2, \"A\", 341],[3, \"A\", 15],[4, \"A\", 15314],[5, \"A\", 451],[6, \"A\", 513],[7, \"B\", 15],[8, \"B\", 13],[9, \"B\", 1154],[10, \"B\", 1345],[11, \"B\", 1221],[12, \"B\", 234],[13, \"C\", 2345],[14, \"C\", 2645],[15, \"C\", 2645],[16, \"C\", 2652],[17, \"C\", 65]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"29.1K\", \"totalSubmission\": \"43.2K\", \"totalAcceptedRaw\": 29124, \"totalSubmissionRaw\": 43164, \"acRate\": \"67.5%\"}",
        "hints": [
            "Still remember how to select the sum which group by one column?",
            "Try to think about how to get the median from a sorted list.",
            "How to get the median one item for odd number list while how to get the median two items for even number list, try to unify them."
        ],
        "solution": null,
        "status": null,
        "sampleTestCase": "{\"headers\": {\"Employee\": [\"id\", \"company\", \"salary\"]}, \"rows\": {\"Employee\": [[1, \"A\", 2341],[2, \"A\", 341],[3, \"A\", 15],[4, \"A\", 15314],[5, \"A\", 451],[6, \"A\", 513],[7, \"B\", 15],[8, \"B\", 13],[9, \"B\", 1154],[10, \"B\", 1345],[11, \"B\", 1221],[12, \"B\", 234],[13, \"C\", 2345],[14, \"C\", 2645],[15, \"C\", 2645],[16, \"C\", 2652],[17, \"C\", 65]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Employee (id int, company varchar(255), salary int)\"\n  ],\n  \"mssql\": [\n    \"Create table Employee (id int, company varchar(255), salary int)\"\n  ],\n  \"oraclesql\": [\n    \"Create table Employee (id int, company varchar(255), salary int)\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists Employee (id int, company varchar(255), salary int)",
            "Truncate table Employee",
            "insert into Employee (id, company, salary) values ('1', 'A', '2341')",
            "insert into Employee (id, company, salary) values ('2', 'A', '341')",
            "insert into Employee (id, company, salary) values ('3', 'A', '15')",
            "insert into Employee (id, company, salary) values ('4', 'A', '15314')",
            "insert into Employee (id, company, salary) values ('5', 'A', '451')",
            "insert into Employee (id, company, salary) values ('6', 'A', '513')",
            "insert into Employee (id, company, salary) values ('7', 'B', '15')",
            "insert into Employee (id, company, salary) values ('8', 'B', '13')",
            "insert into Employee (id, company, salary) values ('9', 'B', '1154')",
            "insert into Employee (id, company, salary) values ('10', 'B', '1345')",
            "insert into Employee (id, company, salary) values ('11', 'B', '1221')",
            "insert into Employee (id, company, salary) values ('12', 'B', '234')",
            "insert into Employee (id, company, salary) values ('13', 'C', '2345')",
            "insert into Employee (id, company, salary) values ('14', 'C', '2645')",
            "insert into Employee (id, company, salary) values ('15', 'C', '2645')",
            "insert into Employee (id, company, salary) values ('16', 'C', '2652')",
            "insert into Employee (id, company, salary) values ('17', 'C', '65')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "median-employee-salary",
    "playgroundData": null
}