{
    "id": "619",
    "question": {
        "questionId": "619",
        "questionFrontendId": "619",
        "boundTopicId": null,
        "title": "Biggest Single Number",
        "titleSlug": "biggest-single-number",
        "content": "<p>Table: <code>MyNumbers</code></p>\n\n<pre>\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| num         | int  |\n+-------------+------+\nThere is no primary key for this table. It may contain duplicates.\nEach row of this table contains an integer.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>A <strong>single number</strong> is a number that appeared only once in the <code>MyNumbers</code> table.</p>\n\n<p>Write an SQL query to report the largest <strong>single number</strong>. If there is no <strong>single number</strong>, report <code>null</code>.</p>\n\n<p>The query result format is in the following example.</p>\n<ptable> </ptable>\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nMyNumbers table:\n+-----+\n| num |\n+-----+\n| 8   |\n| 8   |\n| 3   |\n| 3   |\n| 1   |\n| 4   |\n| 5   |\n| 6   |\n+-----+\n<strong>Output:</strong> \n+-----+\n| num |\n+-----+\n| 6   |\n+-----+\n<strong>Explanation:</strong> The single numbers are 1, 4, 5, and 6.\nSince 6 is the largest single number, we return it.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nMyNumbers table:\n+-----+\n| num |\n+-----+\n| 8   |\n| 8   |\n| 7   |\n| 7   |\n| 3   |\n| 3   |\n| 3   |\n+-----+\n<strong>Output:</strong> \n+------+\n| num  |\n+------+\n| null |\n+------+\n<strong>Explanation:</strong> There are no single numbers in the input table so we return null.\n</pre>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Easy",
        "likes": 126,
        "dislikes": 115,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "{\"headers\": {\"MyNumbers\": [\"num\"]}, \"rows\": {\"MyNumbers\": [[8],[8],[3],[3],[1],[4],[5],[6]]}}\n{\"headers\": {\"MyNumbers\": [\"num\"]}, \"rows\": {\"MyNumbers\": [[8],[8],[7],[7],[3],[3],[3]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"1\": [], \"2\": [], \"3\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"49.5K\", \"totalSubmission\": \"103.1K\", \"totalAcceptedRaw\": 49521, \"totalSubmissionRaw\": 103074, \"acRate\": \"48.0%\"}",
        "hints": [],
        "solution": {
            "id": "188",
            "canSeeDetail": true,
            "paidOnly": false,
            "hasVideoSolution": false,
            "paidOnlyVideo": true,
            "__typename": "ArticleNode"
        },
        "status": null,
        "sampleTestCase": "{\"headers\": {\"MyNumbers\": [\"num\"]}, \"rows\": {\"MyNumbers\": [[8],[8],[3],[3],[1],[4],[5],[6]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists MyNumbers (num int)\"\n  ],\n  \"mssql\": [\n    \"Create table MyNumbers (num int)\"\n  ],\n  \"oraclesql\": [\n    \"Create table MyNumbers (num int)\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists MyNumbers (num int)",
            "Truncate table MyNumbers",
            "insert into MyNumbers (num) values ('8')",
            "insert into MyNumbers (num) values ('8')",
            "insert into MyNumbers (num) values ('3')",
            "insert into MyNumbers (num) values ('3')",
            "insert into MyNumbers (num) values ('1')",
            "insert into MyNumbers (num) values ('4')",
            "insert into MyNumbers (num) values ('5')",
            "insert into MyNumbers (num) values ('6')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": {
        "id": "188",
        "content": "[TOC]\n\n## Solution\n---\n#### Approach: Using **subquery** and `MAX()` function [Accepted]\n\n**Algorithm**\n\nUse subquery to select all the numbers appearing just one time.\n\n```sql\nSELECT\n    num\nFROM\n    my_numbers\nGROUP BY num\nHAVING COUNT(num) = 1;\n```\n\nThen choose the biggest one using `MAX()`.\n\n```sql\nSELECT\n    MAX(num) AS num\nFROM\n    (SELECT\n        num\n    FROM\n        my_numbers\n    GROUP BY num\n    HAVING COUNT(num) = 1) AS t;\n```",
        "contentTypeId": "107",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true,
        "rating": {
            "id": "183",
            "count": 12,
            "average": "4.333",
            "userRating": null,
            "__typename": "RatingNode"
        },
        "__typename": "ArticleNode"
    },
    "questionCode": "biggest-single-number",
    "playgroundData": {}
}