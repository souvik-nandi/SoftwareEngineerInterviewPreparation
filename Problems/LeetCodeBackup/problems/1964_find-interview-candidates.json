{
    "id": "1964",
    "question": {
        "questionId": "1964",
        "questionFrontendId": "1811",
        "boundTopicId": null,
        "title": "Find Interview Candidates",
        "titleSlug": "find-interview-candidates",
        "content": "<p>Table: <code>Contests</code></p>\n\n<pre>\n+--------------+------+\n| Column Name  | Type |\n+--------------+------+\n| contest_id   | int  |\n| gold_medal   | int  |\n| silver_medal | int  |\n| bronze_medal | int  |\n+--------------+------+\ncontest_id is the primary key for this table.\nThis table contains the LeetCode contest ID and the user IDs of the gold, silver, and bronze medalists.\nIt is guaranteed that any consecutive contests have consecutive IDs and that no ID is skipped.</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Users</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| user_id     | int     |\n| mail        | varchar |\n| name        | varchar |\n+-------------+---------+\nuser_id is the primary key for this table.\nThis table contains information about the users.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to report the <code>name</code> and the <code>mail</code> of all <strong>interview candidates</strong>. A user is an <strong>interview candidate</strong> if <strong>at least one</strong> of these two conditions is true:</p>\n\n<ul>\n\t<li>The user won <strong>any</strong> medal in <strong>three or more consecutive</strong> contests.</li>\n\t<li>The user won the <strong>gold</strong> medal in <strong>three or more different</strong> contests (not necessarily consecutive).</li>\n</ul>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nContests table:\n+------------+------------+--------------+--------------+\n| contest_id | gold_medal | silver_medal | bronze_medal |\n+------------+------------+--------------+--------------+\n| 190        | 1          | 5            | 2            |\n| 191        | 2          | 3            | 5            |\n| 192        | 5          | 2            | 3            |\n| 193        | 1          | 3            | 5            |\n| 194        | 4          | 5            | 2            |\n| 195        | 4          | 2            | 1            |\n| 196        | 1          | 5            | 2            |\n+------------+------------+--------------+--------------+\nUsers table:\n+---------+--------------------+-------+\n| user_id | mail               | name  |\n+---------+--------------------+-------+\n| 1       | sarah@leetcode.com | Sarah |\n| 2       | bob@leetcode.com   | Bob   |\n| 3       | alice@leetcode.com | Alice |\n| 4       | hercy@leetcode.com | Hercy |\n| 5       | quarz@leetcode.com | Quarz |\n+---------+--------------------+-------+\n<strong>Output:</strong> \n+-------+--------------------+\n| name  | mail               |\n+-------+--------------------+\n| Sarah | sarah@leetcode.com |\n| Bob   | bob@leetcode.com   |\n| Alice | alice@leetcode.com |\n| Quarz | quarz@leetcode.com |\n+-------+--------------------+\n<strong>Explanation:</strong> \nSarah won 3 gold medals (190, 193, and 196), so we include her in the result table.\nBob won a medal in 3 consecutive contests (190, 191, and 192), so we include him in the result table.\n    - Note that he also won a medal in 3 other consecutive contests (194, 195, and 196).\nAlice won a medal in 3 consecutive contests (191, 192, and 193), so we include her in the result table.\nQuarz won a medal in 5 consecutive contests (190, 191, 192, 193, and 194), so we include them in the result table.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>What if the first condition changed to be &quot;any medal in <code>n</code><strong> or more</strong> consecutive contests&quot;? How would you change your solution to get the interview candidates? Imagine that <code>n</code> is the parameter of a stored procedure.</li>\n\t<li>Some users may not participate in every contest but still perform well in the ones they do. How would you change your solution to only consider contests where the user <strong>was a participant</strong>? Suppose the registered users for each contest are given in another table.</li>\n</ul>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Medium",
        "likes": 132,
        "dislikes": 20,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "{\"headers\":{\"Contests\":[\"contest_id\",\"gold_medal\",\"silver_medal\",\"bronze_medal\"],\"Users\":[\"user_id\",\"mail\",\"name\"]},\"rows\":{\"Contests\":[[190,1,5,2],[191,2,3,5],[192,5,2,3],[193,1,3,5],[194,4,5,2],[195,4,2,1],[196,1,5,2]],\"Users\":[[1,\"sarah@leetcode.com\",\"Sarah\"],[2,\"bob@leetcode.com\",\"Bob\"],[3,\"alice@leetcode.com\",\"Alice\"],[4,\"hercy@leetcode.com\",\"Hercy\"],[5,\"quarz@leetcode.com\",\"Quarz\"]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"2\": [{\"taggedByAdmin\": true, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 2}], \"1\": [], \"3\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"9.8K\", \"totalSubmission\": \"15.2K\", \"totalAcceptedRaw\": 9831, \"totalSubmissionRaw\": 15186, \"acRate\": \"64.7%\"}",
        "hints": [],
        "solution": null,
        "status": null,
        "sampleTestCase": "{\"headers\":{\"Contests\":[\"contest_id\",\"gold_medal\",\"silver_medal\",\"bronze_medal\"],\"Users\":[\"user_id\",\"mail\",\"name\"]},\"rows\":{\"Contests\":[[190,1,5,2],[191,2,3,5],[192,5,2,3],[193,1,3,5],[194,4,5,2],[195,4,2,1],[196,1,5,2]],\"Users\":[[1,\"sarah@leetcode.com\",\"Sarah\"],[2,\"bob@leetcode.com\",\"Bob\"],[3,\"alice@leetcode.com\",\"Alice\"],[4,\"hercy@leetcode.com\",\"Hercy\"],[5,\"quarz@leetcode.com\",\"Quarz\"]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Contests (contest_id int, gold_medal int, silver_medal int, bronze_medal int)\",\n    \"Create table If Not Exists Users (user_id int, mail varchar(50), name varchar(30))\"\n  ],\n  \"mssql\": [\n    \"Create table Contests (contest_id int, gold_medal int, silver_medal int, bronze_medal int)\",\n    \"Create table Users (user_id int, mail varchar(50), name varchar(30))\"\n  ],\n  \"oraclesql\": [\n    \"Create table Contests (contest_id int, gold_medal int, silver_medal int, bronze_medal int)\",\n    \"Create table Users (user_id int, mail varchar(50), name varchar(30))\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists Contests (contest_id int, gold_medal int, silver_medal int, bronze_medal int)",
            "Create table If Not Exists Users (user_id int, mail varchar(50), name varchar(30))",
            "Truncate table Contests",
            "insert into Contests (contest_id, gold_medal, silver_medal, bronze_medal) values ('190', '1', '5', '2')",
            "insert into Contests (contest_id, gold_medal, silver_medal, bronze_medal) values ('191', '2', '3', '5')",
            "insert into Contests (contest_id, gold_medal, silver_medal, bronze_medal) values ('192', '5', '2', '3')",
            "insert into Contests (contest_id, gold_medal, silver_medal, bronze_medal) values ('193', '1', '3', '5')",
            "insert into Contests (contest_id, gold_medal, silver_medal, bronze_medal) values ('194', '4', '5', '2')",
            "insert into Contests (contest_id, gold_medal, silver_medal, bronze_medal) values ('195', '4', '2', '1')",
            "insert into Contests (contest_id, gold_medal, silver_medal, bronze_medal) values ('196', '1', '5', '2')",
            "Truncate table Users",
            "insert into Users (user_id, mail, name) values ('1', 'sarah@leetcode.com', 'Sarah')",
            "insert into Users (user_id, mail, name) values ('2', 'bob@leetcode.com', 'Bob')",
            "insert into Users (user_id, mail, name) values ('3', 'alice@leetcode.com', 'Alice')",
            "insert into Users (user_id, mail, name) values ('4', 'hercy@leetcode.com', 'Hercy')",
            "insert into Users (user_id, mail, name) values ('5', 'quarz@leetcode.com', 'Quarz')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "find-interview-candidates",
    "playgroundData": null
}