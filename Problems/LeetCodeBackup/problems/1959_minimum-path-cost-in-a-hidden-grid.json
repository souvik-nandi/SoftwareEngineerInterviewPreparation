{
    "id": "1959",
    "question": {
        "questionId": "1959",
        "questionFrontendId": "1810",
        "boundTopicId": null,
        "title": "Minimum Path Cost in a Hidden Grid",
        "titleSlug": "minimum-path-cost-in-a-hidden-grid",
        "content": "<p>This is an <strong>interactive problem</strong>.</p>\n\n<p>There is a robot in a hidden grid, and you are trying to get it from its starting cell to the target cell in this grid. The grid is of size <code>m x n</code>, and each cell in the grid is either empty or blocked. It is <strong>guaranteed</strong> that the starting cell and the target cell are different, and neither of them is blocked.</p>\n\n<p>Each cell has a <strong>cost</strong> that you need to pay each time you <strong>move</strong> to the cell. The starting cell&#39;s cost is <strong>not</strong> applied before the robot moves.</p>\n\n<p>You want to find the minimum total cost to move the robot to the target cell. However, you <strong>do not know</strong> the grid&#39;s dimensions, the starting cell, nor the target cell. You are only allowed to ask queries to the <code>GridMaster</code> object.</p>\n\n<p>The <code>GridMaster</code> class has the following functions:</p>\n\n<ul>\n\t<li><code>boolean canMove(char direction)</code> Returns <code>true</code> if the robot can move in that direction. Otherwise, it returns <code>false</code>.</li>\n\t<li><code>int move(char direction)</code> Moves the robot in that direction and returns the cost of moving to that cell. If this move would move the robot to a blocked cell or off the grid, the move will be <strong>ignored</strong>, the robot will remain in the same position, and the function will return <code>-1</code>.</li>\n\t<li><code>boolean isTarget()</code> Returns <code>true</code> if the robot is currently on the target cell. Otherwise, it returns <code>false</code>.</li>\n</ul>\n\n<p>Note that <code>direction</code> in the above functions should be a character from <code>{&#39;U&#39;,&#39;D&#39;,&#39;L&#39;,&#39;R&#39;}</code>, representing the directions up, down, left, and right, respectively.</p>\n\n<p>Return <em>the <strong>minimum total cost</strong> to get the robot from its initial starting cell to the target cell. If there is no valid path between the cells, return </em><code>-1</code>.</p>\n\n<p><strong>Custom testing:</strong></p>\n\n<p>The test input is read as a 2D matrix <code>grid</code> of size <code>m x n</code> and four integers <code>r1</code>, <code>c1</code>, <code>r2</code>, and <code><font face=\"monospace\">c2</font></code> where:</p>\n\n<ul>\n\t<li><code>grid[i][j] == 0</code> indicates that the cell <code>(i, j)</code> is blocked.</li>\n\t<li><code>grid[i][j] &gt;= 1</code> indicates that the cell <code>(i, j)</code> is empty and <code>grid[i][j]</code> is the <strong>cost</strong> to move to that cell.</li>\n\t<li><code>(r1, c1)</code> is the starting cell of the robot.</li>\n\t<li><code>(r2, c2)</code> is the target cell of the robot.</li>\n</ul>\n\n<p>Remember that you will <strong>not</strong> have this information in your code.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[2,3],[1,1]], r1 = 0, c1 = 1, r2 = 1, c2 = 0\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> One possible interaction is described below:\nThe robot is initially standing on cell (0, 1), denoted by the 3.\n- master.canMove(&#39;U&#39;) returns false.\n- master.canMove(&#39;D&#39;) returns true.\n- master.canMove(&#39;L&#39;) returns true.\n- master.canMove(&#39;R&#39;) returns false.\n- master.move(&#39;L&#39;) moves the robot to the cell (0, 0) and returns 2.\n- master.isTarget() returns false.\n- master.canMove(&#39;U&#39;) returns false.\n- master.canMove(&#39;D&#39;) returns true.\n- master.canMove(&#39;L&#39;) returns false.\n- master.canMove(&#39;R&#39;) returns true.\n- master.move(&#39;D&#39;) moves the robot to the cell (1, 0) and returns 1.\n- master.isTarget() returns true.\n- master.move(&#39;L&#39;) doesn&#39;t move the robot and returns -1.\n- master.move(&#39;R&#39;) moves the robot to the cell (1, 1) and returns 1.\nWe now know that the target is the cell (1, 0), and the minimum total cost to reach it is 2. </pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[0,3,1],[3,4,2],[1,2,0]], r1 = 2, c1 = 0, r2 = 0, c2 = 2\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> The minimum cost path is (2,0) -&gt; (2,1) -&gt; (1,1) -&gt; (1,2) -&gt; (0,2).\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,0],[0,1]], r1 = 0, c1 = 0, r2 = 1, c2 = 1\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> There is no path from the robot to the target cell.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n, m &lt;= 100</code></li>\n\t<li><code>m == grid.length</code></li>\n\t<li><code>n == grid[i].length</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 100</code></li>\n</ul>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Medium",
        "likes": 60,
        "dislikes": 18,
        "isLiked": null,
        "similarQuestions": "[{\"title\": \"Robot Room Cleaner\", \"titleSlug\": \"robot-room-cleaner\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Shortest Path in a Hidden Grid\", \"titleSlug\": \"shortest-path-in-a-hidden-grid\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "exampleTestcases": "[[2,3],[1,1]]\n0\n1\n1\n0\n[[0,3,1],[3,4,2],[1,2,0]]\n2\n0\n0\n2\n[[1,0],[0,1]]\n0\n0\n1\n1",
        "categoryTitle": "Algorithms",
        "contributors": [],
        "topicTags": [
            {
                "name": "Depth-First Search",
                "slug": "depth-first-search",
                "translatedName": null,
                "__typename": "TopicTagNode"
            },
            {
                "name": "Breadth-First Search",
                "slug": "breadth-first-search",
                "translatedName": null,
                "__typename": "TopicTagNode"
            },
            {
                "name": "Graph",
                "slug": "graph",
                "translatedName": null,
                "__typename": "TopicTagNode"
            },
            {
                "name": "Heap (Priority Queue)",
                "slug": "heap-priority-queue",
                "translatedName": null,
                "__typename": "TopicTagNode"
            },
            {
                "name": "Interactive",
                "slug": "interactive",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 0}, {\"taggedByAdmin\": true, \"name\": \"Facebook\", \"slug\": \"facebook\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
        "codeSnippets": [
            {
                "lang": "C++",
                "langSlug": "cpp",
                "code": "/**\n * // This is the GridMaster's API interface.\n * // You should not implement it, or speculate about its implementation\n * class GridMaster {\n *   public:\n *     bool canMove(char direction);\n *     int move(char direction);\n *     boolean isTarget();\n * };\n */\n\nclass Solution {\npublic:\n    int findShortestPath(GridMaster &master) {\n        \n    }\n};",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Java",
                "langSlug": "java",
                "code": "/**\n * // This is the GridMaster's API interface.\n * // You should not implement it, or speculate about its implementation\n * class GridMaster {\n *     boolean canMove(char direction);\n *     int move(char direction);\n *     boolean isTarget();\n * }\n */\n\nclass Solution {\n    public int findShortestPath(GridMaster master) {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Python",
                "langSlug": "python",
                "code": "# \"\"\"\n# This is GridMaster's API interface.\n# You should not implement it, or speculate about it's implementation\n# \"\"\"\n#class GridMaster(object):\n#    def canMove(self, direction):\n#        \"\"\"\n#        :type direction: str\n#        :rtype bool\n#        \"\"\"\n#\n#    def move(self, direction):\n#        \"\"\"\n#        :type direction: str\n#.       :rtype int\n#        \"\"\"\n#\n#    def isTarget(self):\n#        \"\"\"\n#        :rtype bool\n#        \"\"\"\n#\n\nclass Solution(object):\n    def findShortestPath(self, master):\n        \"\"\"\n        :type master: GridMaster\n        :rtype: int\n        \"\"\"\n        ",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Python3",
                "langSlug": "python3",
                "code": "# \"\"\"\n# This is GridMaster's API interface.\n# You should not implement it, or speculate about its implementation\n# \"\"\"\n#class GridMaster(object):\n#    def canMove(self, direction: str) -> bool:\n#        \n#\n#    def move(self, direction: str) -> int:\n#        \n#\n#    def isTarget(self) -> None:\n#        \n#\n\nclass Solution(object):\n    def findShortestPath(self, master: 'GridMaster') -> int:\n        \n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "C#",
                "langSlug": "csharp",
                "code": "/**\n * // This is the GridMaster's API interface.\n * // You should not implement it, or speculate about its implementation\n * class GridMaster {\n *     bool canMove(char direction);\n *     int move(char direction);\n *     bool isTarget();\n * };\n */\n\nclass Solution {\n    public int FindShortestPath(GridMaster master) {\n        \n    }\n}",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "JavaScript",
                "langSlug": "javascript",
                "code": "/**\n * // This is the GridMaster's API interface.\n * // You should not implement it, or speculate about its implementation\n * function GridMaster() {\n *\n *     @param {character} direction\n *     @return {boolean}\n *     this.canMove = function(direction) {\n *         ...\n *     };\n *     @param {character} direction\n *     @return {integer}\n *     this.move = function(direction) {\n *         ...\n *     };\n *     @return {boolean}\n *     this.isTarget = function() {\n *         ...\n *     };\n * };\n */\n\n/**\n * @param {GridMaster} master\n * @return {integer}\n */\nvar findShortestPath = function(master) {\n    \n};",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"2K\", \"totalSubmission\": \"3.7K\", \"totalAcceptedRaw\": 1981, \"totalSubmissionRaw\": 3688, \"acRate\": \"53.7%\"}",
        "hints": [
            "The grid is at a maximum 100 x 100, so it is clever to assume that the robot's initial cell is grid[101][101]",
            "Run a DFS from the robot's position to make sure that you can reach the target, otherwise you should return -1.",
            "Now that you are sure you can reach the target and that you know the grid, run Dijkstra to find the minimum cost."
        ],
        "solution": null,
        "status": null,
        "sampleTestCase": "[[2,3],[1,1]]\n0\n1\n1\n0",
        "metaData": "{\n  \"name\": \"findShortestPath\",\n  \"params\": [\n    {\n      \"type\": \"integer[][]\",\n      \"name\": \"grid\"\n    },\n    {\n      \"type\": \"integer\",\n      \"name\": \"r1\"\n    },\n    {\n      \"type\": \"integer\",\n      \"name\": \"c1\"\n    },\n    {\n      \"type\": \"integer\",\n      \"name\": \"r2\"\n    },\n    {\n      \"type\": \"integer\",\n      \"name\": \"c2\"\n    }\n  ],\n  \"return\": {\n    \"type\": \"integer\"\n  },\n  \"manual\": true,\n  \"languages\": [\n    \"cpp\",\n    \"java\",\n    \"python\",\n    \"csharp\",\n    \"javascript\",\n    \"python3\"\n  ]\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": true,
        "envInfo": "{\"cpp\": [\"C++\", \"<p>Compiled with <code> clang 11 </code> using the latest C++ 17 standard.</p>\\r\\n\\r\\n<p>Your code is compiled with level two optimization (<code>-O2</code>). <a href=\\\"https://github.com/google/sanitizers/wiki/AddressSanitizer\\\" target=\\\"_blank\\\">AddressSanitizer</a> is also enabled to help detect out-of-bounds and use-after-free bugs.</p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\"], \"java\": [\"Java\", \"<p><code> OpenJDK 17 </code>. Java 8 features such as lambda expressions and stream API can be used. </p>\\r\\n\\r\\n<p>Most standard library headers are already included automatically for your convenience.</p>\\r\\n<p>Includes <code>Pair</code> class from https://docs.oracle.com/javase/8/javafx/api/javafx/util/Pair.html.</p>\"], \"python\": [\"Python\", \"<p><code>Python 2.7.12</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/2/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/2/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/2/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\\r\\n\\r\\n<p>Note that Python 2.7 <a href=\\\"https://www.python.org/dev/peps/pep-0373/\\\" target=\\\"_blank\\\">will not be maintained past 2020</a>. For the latest Python, please choose Python3 instead.</p>\"], \"csharp\": [\"C#\", \"<p><a href=\\\"https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-9\\\" target=\\\"_blank\\\">C# 10 with .NET 6 runtime</a></p>\"], \"javascript\": [\"JavaScript\", \"<p><code>Node.js 16.13.2</code>.</p>\\r\\n\\r\\n<p>Your code is run with <code>--harmony</code> flag, enabling <a href=\\\"http://node.green/\\\" target=\\\"_blank\\\">new ES6 features</a>.</p>\\r\\n\\r\\n<p><a href=\\\"https://lodash.com\\\" target=\\\"_blank\\\">lodash.js</a> library is included by default.</p>\\r\\n\\r\\n<p>For Priority Queue / Queue data structures, you may use <a href=\\\"https://github.com/datastructures-js/priority-queue\\\" target=\\\"_blank\\\">datastructures-js/priority-queue</a> and <a href=\\\"https://github.com/datastructures-js/queue\\\" target=\\\"_blank\\\">datastructures-js/queue</a>.</p>\"], \"python3\": [\"Python3\", \"<p><code>Python 3.10</code>.</p>\\r\\n\\r\\n<p>Most libraries are already imported automatically for your convenience, such as <a href=\\\"https://docs.python.org/3/library/array.html\\\" target=\\\"_blank\\\">array</a>, <a href=\\\"https://docs.python.org/3/library/bisect.html\\\" target=\\\"_blank\\\">bisect</a>, <a href=\\\"https://docs.python.org/3/library/collections.html\\\" target=\\\"_blank\\\">collections</a>. If you need more libraries, you can import it yourself.</p>\\r\\n\\r\\n<p>For Map/TreeMap data structure, you may use <a href=\\\"http://www.grantjenks.com/docs/sortedcontainers/\\\" target=\\\"_blank\\\">sortedcontainers</a> library.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "minimum-path-cost-in-a-hidden-grid",
    "playgroundData": null
}