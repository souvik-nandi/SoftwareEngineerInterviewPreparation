{
    "id": "584",
    "question": {
        "questionId": "584",
        "questionFrontendId": "584",
        "boundTopicId": null,
        "title": "Find Customer Referee",
        "titleSlug": "find-customer-referee",
        "content": "<p>Table: <code>Customer</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n| referee_id  | int     |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table indicates the id of a customer, their name, and the id of the customer who referred them.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to report the names of the customer that are <strong>not referred by</strong> the customer with <code>id = 2</code>.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nCustomer table:\n+----+------+------------+\n| id | name | referee_id |\n+----+------+------------+\n| 1  | Will | null       |\n| 2  | Jane | null       |\n| 3  | Alex | 2          |\n| 4  | Bill | null       |\n| 5  | Zack | 1          |\n| 6  | Mark | 2          |\n+----+------+------------+\n<strong>Output:</strong> \n+------+\n| name |\n+------+\n| Will |\n| Jane |\n| Bill |\n| Zack |\n+------+\n</pre>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": false,
        "difficulty": "Easy",
        "likes": 384,
        "dislikes": 207,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "{\"headers\":{\"Customer\":[\"id\",\"name\",\"referee_id\"]},\"rows\":{\"Customer\":[[1,\"Will\",null],[2,\"Jane\",null],[3,\"Alex\",2],[4,\"Bill\",null],[5,\"Zack\",1],[6,\"Mark\",2]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"1\": [], \"2\": [], \"3\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"121.9K\", \"totalSubmission\": \"158.2K\", \"totalAcceptedRaw\": 121856, \"totalSubmissionRaw\": 158220, \"acRate\": \"77.0%\"}",
        "hints": [
            "Be careful of the NULL value"
        ],
        "solution": {
            "id": "156",
            "canSeeDetail": true,
            "paidOnly": false,
            "hasVideoSolution": false,
            "paidOnlyVideo": true,
            "__typename": "ArticleNode"
        },
        "status": null,
        "sampleTestCase": "{\"headers\":{\"Customer\":[\"id\",\"name\",\"referee_id\"]},\"rows\":{\"Customer\":[[1,\"Will\",null],[2,\"Jane\",null],[3,\"Alex\",2],[4,\"Bill\",null],[5,\"Zack\",1],[6,\"Mark\",2]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Customer (id int, name varchar(25), referee_id int)\"\n  ],\n  \"mssql\": [\n    \"Create table Customer (id int, name varchar(25), referee_id int)\"\n  ],\n  \"oraclesql\": [\n    \"Create table Customer (id int, name varchar(25), referee_id int)\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists Customer (id int, name varchar(25), referee_id int)",
            "Truncate table Customer",
            "insert into Customer (id, name, referee_id) values ('1', 'Will', 'None')",
            "insert into Customer (id, name, referee_id) values ('2', 'Jane', 'None')",
            "insert into Customer (id, name, referee_id) values ('3', 'Alex', '2')",
            "insert into Customer (id, name, referee_id) values ('4', 'Bill', 'None')",
            "insert into Customer (id, name, referee_id) values ('5', 'Zack', '1')",
            "insert into Customer (id, name, referee_id) values ('6', 'Mark', '2')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": {
        "id": "156",
        "content": "[TOC]\n\n## Solution\n---\n#### Approach: Using `<>`(`!=`) and `IS NULL` [Accepted]\n\n**Intuition**\n\nSome people come out the following solution by intuition.\n```sql\nSELECT name FROM customer WHERE referee_Id <> 2;\n```\n\nHowever, this query will only return one result:Zack although there are 4 customers not referred by Jane (including Jane herself). All the customers who were referred by nobody at all (`NULL` value in the referee_id column) don\u2019t show up. But why?\n\n**Algorithm**\n\nMySQL uses three-valued logic -- TRUE, FALSE and UNKNOWN. Anything compared to NULL evaluates to the third value: UNKNOWN. That \u201canything\u201d includes NULL itself! That\u2019s why MySQL provides the `IS NULL` and `IS NOT NULL` operators to specifically check for NULL.\n\nThus, one more condition 'referee_id IS NULL' should be added to the WHERE clause as below.\n\n**MySQL**\n\n```sql\nSELECT name FROM customer WHERE referee_id <> 2 OR referee_id IS NULL;\n```\nor\n```mysql\nSELECT name FROM customer WHERE referee_id != 2 OR referee_id IS NULL;\n```\n\n**Tips**\n\nThe following solution is also wrong for the same reason as mentioned above. The key is to always use `IS NULL` or `IS NOT NULL` operators to specifically check for NULL value.\n\n```sql\nSELECT name FROM customer WHERE referee_id = NULL OR referee_id <> 2;\n```",
        "contentTypeId": "107",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true,
        "rating": {
            "id": "151",
            "count": 34,
            "average": "4.794",
            "userRating": null,
            "__typename": "RatingNode"
        },
        "__typename": "ArticleNode"
    },
    "questionCode": "find-customer-referee",
    "playgroundData": {}
}