{
    "id": "597",
    "question": {
        "questionId": "597",
        "questionFrontendId": "597",
        "boundTopicId": null,
        "title": "Friend Requests I: Overall Acceptance Rate",
        "titleSlug": "friend-requests-i-overall-acceptance-rate",
        "content": "<p>Table: <code>FriendRequest</code></p>\n\n<pre>\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| sender_id      | int     |\n| send_to_id     | int     |\n| request_date   | date    |\n+----------------+---------+\nThere is no primary key for this table, it may contain duplicates.\nThis table contains the ID of the user who sent the request, the ID of the user who received the request, and the date of the request.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>RequestAccepted</code></p>\n\n<pre>\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| requester_id   | int     |\n| accepter_id    | int     |\n| accept_date    | date    |\n+----------------+---------+\nThere is no primary key for this table, it may contain duplicates.\nThis table contains the ID of the user who sent the request, the ID of the user who received the request, and the date when the request was accepted.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to find the overall acceptance rate of requests, which is the number of acceptance divided by the number of requests. Return the answer rounded to 2 decimals places.</p>\n\n<p><strong>Note that:</strong></p>\n\n<ul>\n\t<li>The accepted requests are not necessarily from the table <code>friend_request</code>. In this case, Count the total accepted requests (no matter whether they are in the original requests), and divide it by the number of requests to get the acceptance rate.</li>\n\t<li>It is possible that a sender sends multiple requests to the same receiver, and a request could be accepted more than once. In this case, the &lsquo;duplicated&rsquo; requests or acceptances are only counted once.</li>\n\t<li>If there are no requests at all, you should return 0.00 as the <code>accept_rate</code>.</li>\n</ul>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nFriendRequest table:\n+-----------+------------+--------------+\n| sender_id | send_to_id | request_date |\n+-----------+------------+--------------+\n| 1         | 2          | 2016/06/01   |\n| 1         | 3          | 2016/06/01   |\n| 1         | 4          | 2016/06/01   |\n| 2         | 3          | 2016/06/02   |\n| 3         | 4          | 2016/06/09   |\n+-----------+------------+--------------+\nRequestAccepted table:\n+--------------+-------------+-------------+\n| requester_id | accepter_id | accept_date |\n+--------------+-------------+-------------+\n| 1            | 2           | 2016/06/03  |\n| 1            | 3           | 2016/06/08  |\n| 2            | 3           | 2016/06/08  |\n| 3            | 4           | 2016/06/09  |\n| 3            | 4           | 2016/06/10  |\n+--------------+-------------+-------------+\n<strong>Output:</strong> \n+-------------+\n| accept_rate |\n+-------------+\n| 0.8         |\n+-------------+\n<strong>Explanation:</strong> \nThere are 4 unique accepted requests, and there are 5 requests in total. So the rate is 0.80.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>Could you write a query to return the acceptance rate for every month?</li>\n\t<li>Could you write a query to return the cumulative acceptance rate for every day?</li>\n</ul>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Easy",
        "likes": 249,
        "dislikes": 614,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "{\"headers\":{\"FriendRequest\":[\"sender_id\",\"send_to_id\",\"request_date\"],\"RequestAccepted\":[\"requester_id\",\"accepter_id\",\"accept_date\"]},\"rows\":{\"FriendRequest\":[[1,2,\"2016/06/01\"],[1,3,\"2016/06/01\"],[1,4,\"2016/06/01\"],[2,3,\"2016/06/02\"],[3,4,\"2016/06/09\"]],\"RequestAccepted\":[[1,2,\"2016/06/03\"],[1,3,\"2016/06/08\"],[2,3,\"2016/06/08\"],[3,4,\"2016/06/09\"],[3,4,\"2016/06/10\"]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"1\": [{\"taggedByAdmin\": true, \"name\": \"Facebook\", \"slug\": \"facebook\", \"timesEncountered\": 3}], \"2\": [], \"3\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"60.7K\", \"totalSubmission\": \"142.2K\", \"totalAcceptedRaw\": 60706, \"totalSubmissionRaw\": 142194, \"acRate\": \"42.7%\"}",
        "hints": [
            "Still remember how to count the number of rows in a table?",
            "What is the keyword to filter the duplicated records in a table?"
        ],
        "solution": {
            "id": "161",
            "canSeeDetail": true,
            "paidOnly": false,
            "hasVideoSolution": false,
            "paidOnlyVideo": true,
            "__typename": "ArticleNode"
        },
        "status": null,
        "sampleTestCase": "{\"headers\":{\"FriendRequest\":[\"sender_id\",\"send_to_id\",\"request_date\"],\"RequestAccepted\":[\"requester_id\",\"accepter_id\",\"accept_date\"]},\"rows\":{\"FriendRequest\":[[1,2,\"2016/06/01\"],[1,3,\"2016/06/01\"],[1,4,\"2016/06/01\"],[2,3,\"2016/06/02\"],[3,4,\"2016/06/09\"]],\"RequestAccepted\":[[1,2,\"2016/06/03\"],[1,3,\"2016/06/08\"],[2,3,\"2016/06/08\"],[3,4,\"2016/06/09\"],[3,4,\"2016/06/10\"]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists FriendRequest (sender_id int, send_to_id int, request_date date)\",\n    \"Create table If Not Exists RequestAccepted (requester_id int, accepter_id int, accept_date date)\"\n  ],\n  \"mssql\": [\n    \"Create table FriendRequest (sender_id int, send_to_id int, request_date date)\",\n    \"Create table RequestAccepted (requester_id int, accepter_id int, accept_date date)\"\n  ],\n  \"oraclesql\": [\n    \"Create table FriendRequest (sender_id int, send_to_id int, request_date date)\",\n    \"Create table RequestAccepted (requester_id int, accepter_id int, accept_date date)\",\n    \"Alter SESSION set NLS_DATE_FORMAT = 'YYYY/MM/DD'\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists FriendRequest (sender_id int, send_to_id int, request_date date)",
            "Create table If Not Exists RequestAccepted (requester_id int, accepter_id int, accept_date date)",
            "Truncate table FriendRequest",
            "insert into FriendRequest (sender_id, send_to_id, request_date) values ('1', '2', '2016/06/01')",
            "insert into FriendRequest (sender_id, send_to_id, request_date) values ('1', '3', '2016/06/01')",
            "insert into FriendRequest (sender_id, send_to_id, request_date) values ('1', '4', '2016/06/01')",
            "insert into FriendRequest (sender_id, send_to_id, request_date) values ('2', '3', '2016/06/02')",
            "insert into FriendRequest (sender_id, send_to_id, request_date) values ('3', '4', '2016/06/09')",
            "Truncate table RequestAccepted",
            "insert into RequestAccepted (requester_id, accepter_id, accept_date) values ('1', '2', '2016/06/03')",
            "insert into RequestAccepted (requester_id, accepter_id, accept_date) values ('1', '3', '2016/06/08')",
            "insert into RequestAccepted (requester_id, accepter_id, accept_date) values ('2', '3', '2016/06/08')",
            "insert into RequestAccepted (requester_id, accepter_id, accept_date) values ('3', '4', '2016/06/09')",
            "insert into RequestAccepted (requester_id, accepter_id, accept_date) values ('3', '4', '2016/06/10')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": {
        "id": "161",
        "content": "[TOC]\n\n## Solution\n---\n#### Approach: Using `ROUND` and `IFNULL` [Accepted]\n\n**Intuition**\n\nCount the accepted requests and then divides it by the number of all requests.\n\n**Algorithm**\n\nTo get the distinct number of accepted requests, we can query from the **RequestAccepted** table.\n```sql\nSELECT COUNT(*) FROM (SELECT DISTINCT requester_id, accepter_id FROM RequestAccepted) AS A;\n```\n\nWith the same technique, we can have the total number of requests from the **FriendRequest** table:\n```sql\nSELECT COUNT(*) FROM (SELECT DISTINCT sender_id, send_to_id FROM FriendRequest) AS B;\n```\n\nAt last, divide these two numbers and [`ROUND`](https://dev.mysql.com/doc/refman/5.7/en/mathematical-functions.html#function_round) it to a scale of 2 decimal places to get the required acceptance rate.\n\nWait! The divisor (total number of requests) could be '0' if the table **friend_request** is empty. So, we have to utilize  [`IFNULL`](https://dev.mysql.com/doc/refman/5.7/en/control-flow-functions.html#function_ifnull) to deal with this special case.\n\n**MySQL**\n\n```sql\nSELECT\nROUND(\n    IFNULL(\n    (SELECT COUNT(*) FROM (SELECT DISTINCT requester_id, accepter_id FROM RequestAccepted) AS A)\n    /\n    (SELECT COUNT(*) FROM (SELECT DISTINCT sender_id, send_to_id FROM FriendRequest) AS B),\n    0)\n, 2) AS accept_rate;\n```",
        "contentTypeId": "107",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true,
        "rating": {
            "id": "156",
            "count": 35,
            "average": "3.914",
            "userRating": null,
            "__typename": "RatingNode"
        },
        "__typename": "ArticleNode"
    },
    "questionCode": "friend-requests-i-overall-acceptance-rate",
    "playgroundData": {}
}