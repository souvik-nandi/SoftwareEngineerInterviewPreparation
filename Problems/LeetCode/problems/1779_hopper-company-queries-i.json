{
    "id": "1779",
    "question": {
        "questionId": "1779",
        "questionFrontendId": "1635",
        "boundTopicId": null,
        "title": "Hopper Company Queries I",
        "titleSlug": "hopper-company-queries-i",
        "content": "<p>Table: <code>Drivers</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| driver_id   | int     |\n| join_date   | date    |\n+-------------+---------+\ndriver_id is the primary key for this table.\nEach row of this table contains the driver&#39;s ID and the date they joined the Hopper company.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Rides</code></p>\n\n<pre>\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| ride_id      | int     |\n| user_id      | int     |\n| requested_at | date    |\n+--------------+---------+\nride_id is the primary key for this table.\nEach row of this table contains the ID of a ride, the user&#39;s ID that requested it, and the day they requested it.\nThere may be some ride requests in this table that were not accepted.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>AcceptedRides</code></p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| ride_id       | int     |\n| driver_id     | int     |\n| ride_distance | int     |\n| ride_duration | int     |\n+---------------+---------+\nride_id is the primary key for this table.\nEach row of this table contains some information about an accepted ride.\nIt is guaranteed that each accepted ride exists in the Rides table.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to report the following statistics for each month of <strong>2020</strong>:</p>\n\n<ul>\n\t<li>The number of drivers currently with the Hopper company by the end of the month (<code>active_drivers</code>).</li>\n\t<li>The number of accepted rides in that month (<code>accepted_rides</code>).</li>\n</ul>\n\n<p>Return the result table ordered by <code>month</code> in ascending order, where <code>month</code> is the month&#39;s number (January is <code>1</code>, February is <code>2</code>, etc.).</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nDrivers table:\n+-----------+------------+\n| driver_id | join_date  |\n+-----------+------------+\n| 10        | 2019-12-10 |\n| 8         | 2020-1-13  |\n| 5         | 2020-2-16  |\n| 7         | 2020-3-8   |\n| 4         | 2020-5-17  |\n| 1         | 2020-10-24 |\n| 6         | 2021-1-5   |\n+-----------+------------+\nRides table:\n+---------+---------+--------------+\n| ride_id | user_id | requested_at |\n+---------+---------+--------------+\n| 6       | 75      | 2019-12-9    |\n| 1       | 54      | 2020-2-9     |\n| 10      | 63      | 2020-3-4     |\n| 19      | 39      | 2020-4-6     |\n| 3       | 41      | 2020-6-3     |\n| 13      | 52      | 2020-6-22    |\n| 7       | 69      | 2020-7-16    |\n| 17      | 70      | 2020-8-25    |\n| 20      | 81      | 2020-11-2    |\n| 5       | 57      | 2020-11-9    |\n| 2       | 42      | 2020-12-9    |\n| 11      | 68      | 2021-1-11    |\n| 15      | 32      | 2021-1-17    |\n| 12      | 11      | 2021-1-19    |\n| 14      | 18      | 2021-1-27    |\n+---------+---------+--------------+\nAcceptedRides table:\n+---------+-----------+---------------+---------------+\n| ride_id | driver_id | ride_distance | ride_duration |\n+---------+-----------+---------------+---------------+\n| 10      | 10        | 63            | 38            |\n| 13      | 10        | 73            | 96            |\n| 7       | 8         | 100           | 28            |\n| 17      | 7         | 119           | 68            |\n| 20      | 1         | 121           | 92            |\n| 5       | 7         | 42            | 101           |\n| 2       | 4         | 6             | 38            |\n| 11      | 8         | 37            | 43            |\n| 15      | 8         | 108           | 82            |\n| 12      | 8         | 38            | 34            |\n| 14      | 1         | 90            | 74            |\n+---------+-----------+---------------+---------------+\n<strong>Output:</strong> \n+-------+----------------+----------------+\n| month | active_drivers | accepted_rides |\n+-------+----------------+----------------+\n| 1     | 2              | 0              |\n| 2     | 3              | 0              |\n| 3     | 4              | 1              |\n| 4     | 4              | 0              |\n| 5     | 5              | 0              |\n| 6     | 5              | 1              |\n| 7     | 5              | 1              |\n| 8     | 5              | 1              |\n| 9     | 5              | 0              |\n| 10    | 6              | 0              |\n| 11    | 6              | 2              |\n| 12    | 6              | 1              |\n+-------+----------------+----------------+\n<strong>Explanation:</strong> \nBy the end of January --&gt; two active drivers (10, 8) and no accepted rides.\nBy the end of February --&gt; three active drivers (10, 8, 5) and no accepted rides.\nBy the end of March --&gt; four active drivers (10, 8, 5, 7) and one accepted ride (10).\nBy the end of April --&gt; four active drivers (10, 8, 5, 7) and no accepted rides.\nBy the end of May --&gt; five active drivers (10, 8, 5, 7, 4) and no accepted rides.\nBy the end of June --&gt; five active drivers (10, 8, 5, 7, 4) and one accepted ride (13).\nBy the end of July --&gt; five active drivers (10, 8, 5, 7, 4) and one accepted ride (7).\nBy the end of August --&gt; five active drivers (10, 8, 5, 7, 4) and one accepted ride (17).\nBy the end of September --&gt; five active drivers (10, 8, 5, 7, 4) and no accepted rides.\nBy the end of October --&gt; six active drivers (10, 8, 5, 7, 4, 1) and no accepted rides.\nBy the end of November --&gt; six active drivers (10, 8, 5, 7, 4, 1) and two accepted rides (20, 5).\nBy the end of December --&gt; six active drivers (10, 8, 5, 7, 4, 1) and one accepted ride (2).\n</pre>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Hard",
        "likes": 63,
        "dislikes": 27,
        "isLiked": null,
        "similarQuestions": "[{\"title\": \"Trips and Users\", \"titleSlug\": \"trips-and-users\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Hopper Company Queries II\", \"titleSlug\": \"hopper-company-queries-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Hopper Company Queries III\", \"titleSlug\": \"hopper-company-queries-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Times a Driver Was a Passenger\", \"titleSlug\": \"number-of-times-a-driver-was-a-passenger\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "exampleTestcases": "{\"headers\":{\"Drivers\":[\"driver_id\",\"join_date\"],\"Rides\":[\"ride_id\",\"user_id\",\"requested_at\"],\"AcceptedRides\":[\"ride_id\",\"driver_id\",\"ride_distance\",\"ride_duration\"]},\"rows\":{\"Drivers\":[[10,\"2019-12-10\"],[8,\"2020-1-13\"],[5,\"2020-2-16\"],[7,\"2020-3-8\"],[4,\"2020-5-17\"],[1,\"2020-10-24\"],[6,\"2021-1-5\"]],\"Rides\":[[6,75,\"2019-12-9\"],[1,54,\"2020-2-9\"],[10,63,\"2020-3-4\"],[19,39,\"2020-4-6\"],[3,41,\"2020-6-3\"],[13,52,\"2020-6-22\"],[7,69,\"2020-7-16\"],[17,70,\"2020-8-25\"],[20,81,\"2020-11-2\"],[5,57,\"2020-11-9\"],[2,42,\"2020-12-9\"],[11,68,\"2021-1-11\"],[15,32,\"2021-1-17\"],[12,11,\"2021-1-19\"],[14,18,\"2021-1-27\"]],\"AcceptedRides\":[[10,10,63,38],[13,10,73,96],[7,8,100,28],[17,7,119,68],[20,1,121,92],[5,7,42,101],[2,4,6,38],[11,8,37,43],[15,8,108,82],[12,8,38,34],[14,1,90,74]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Uber\", \"slug\": \"uber\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"5.7K\", \"totalSubmission\": \"10.6K\", \"totalAcceptedRaw\": 5657, \"totalSubmissionRaw\": 10614, \"acRate\": \"53.3%\"}",
        "hints": [],
        "solution": null,
        "status": null,
        "sampleTestCase": "{\"headers\":{\"Drivers\":[\"driver_id\",\"join_date\"],\"Rides\":[\"ride_id\",\"user_id\",\"requested_at\"],\"AcceptedRides\":[\"ride_id\",\"driver_id\",\"ride_distance\",\"ride_duration\"]},\"rows\":{\"Drivers\":[[10,\"2019-12-10\"],[8,\"2020-1-13\"],[5,\"2020-2-16\"],[7,\"2020-3-8\"],[4,\"2020-5-17\"],[1,\"2020-10-24\"],[6,\"2021-1-5\"]],\"Rides\":[[6,75,\"2019-12-9\"],[1,54,\"2020-2-9\"],[10,63,\"2020-3-4\"],[19,39,\"2020-4-6\"],[3,41,\"2020-6-3\"],[13,52,\"2020-6-22\"],[7,69,\"2020-7-16\"],[17,70,\"2020-8-25\"],[20,81,\"2020-11-2\"],[5,57,\"2020-11-9\"],[2,42,\"2020-12-9\"],[11,68,\"2021-1-11\"],[15,32,\"2021-1-17\"],[12,11,\"2021-1-19\"],[14,18,\"2021-1-27\"]],\"AcceptedRides\":[[10,10,63,38],[13,10,73,96],[7,8,100,28],[17,7,119,68],[20,1,121,92],[5,7,42,101],[2,4,6,38],[11,8,37,43],[15,8,108,82],[12,8,38,34],[14,1,90,74]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Drivers (driver_id int, join_date date)\",\n    \"Create table If Not Exists Rides (ride_id int, user_id int, requested_at date)\",\n    \"Create table If Not Exists AcceptedRides (ride_id int, driver_id int, ride_distance int, ride_duration int)\"\n  ],\n  \"mssql\": [\n    \"Create table Drivers (driver_id int, join_date date)\",\n    \"Create table Rides (ride_id int, user_id int, requested_at date)\",\n    \"Create table AcceptedRides (ride_id int, driver_id int, ride_distance int, ride_duration int)\"\n  ],\n  \"oraclesql\": [\n    \"Create table Drivers (driver_id int, join_date date)\",\n    \"Create table Rides (ride_id int, user_id int, requested_at date)\",\n    \"Create table AcceptedRides (ride_id int, driver_id int, ride_distance int, ride_duration int)\",\n    \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists Drivers (driver_id int, join_date date)",
            "Create table If Not Exists Rides (ride_id int, user_id int, requested_at date)",
            "Create table If Not Exists AcceptedRides (ride_id int, driver_id int, ride_distance int, ride_duration int)",
            "Truncate table Drivers",
            "insert into Drivers (driver_id, join_date) values ('10', '2019-12-10')",
            "insert into Drivers (driver_id, join_date) values ('8', '2020-1-13')",
            "insert into Drivers (driver_id, join_date) values ('5', '2020-2-16')",
            "insert into Drivers (driver_id, join_date) values ('7', '2020-3-8')",
            "insert into Drivers (driver_id, join_date) values ('4', '2020-5-17')",
            "insert into Drivers (driver_id, join_date) values ('1', '2020-10-24')",
            "insert into Drivers (driver_id, join_date) values ('6', '2021-1-5')",
            "Truncate table Rides",
            "insert into Rides (ride_id, user_id, requested_at) values ('6', '75', '2019-12-9')",
            "insert into Rides (ride_id, user_id, requested_at) values ('1', '54', '2020-2-9')",
            "insert into Rides (ride_id, user_id, requested_at) values ('10', '63', '2020-3-4')",
            "insert into Rides (ride_id, user_id, requested_at) values ('19', '39', '2020-4-6')",
            "insert into Rides (ride_id, user_id, requested_at) values ('3', '41', '2020-6-3')",
            "insert into Rides (ride_id, user_id, requested_at) values ('13', '52', '2020-6-22')",
            "insert into Rides (ride_id, user_id, requested_at) values ('7', '69', '2020-7-16')",
            "insert into Rides (ride_id, user_id, requested_at) values ('17', '70', '2020-8-25')",
            "insert into Rides (ride_id, user_id, requested_at) values ('20', '81', '2020-11-2')",
            "insert into Rides (ride_id, user_id, requested_at) values ('5', '57', '2020-11-9')",
            "insert into Rides (ride_id, user_id, requested_at) values ('2', '42', '2020-12-9')",
            "insert into Rides (ride_id, user_id, requested_at) values ('11', '68', '2021-1-11')",
            "insert into Rides (ride_id, user_id, requested_at) values ('15', '32', '2021-1-17')",
            "insert into Rides (ride_id, user_id, requested_at) values ('12', '11', '2021-1-19')",
            "insert into Rides (ride_id, user_id, requested_at) values ('14', '18', '2021-1-27')",
            "Truncate table AcceptedRides",
            "insert into AcceptedRides (ride_id, driver_id, ride_distance, ride_duration) values ('10', '10', '63', '38')",
            "insert into AcceptedRides (ride_id, driver_id, ride_distance, ride_duration) values ('13', '10', '73', '96')",
            "insert into AcceptedRides (ride_id, driver_id, ride_distance, ride_duration) values ('7', '8', '100', '28')",
            "insert into AcceptedRides (ride_id, driver_id, ride_distance, ride_duration) values ('17', '7', '119', '68')",
            "insert into AcceptedRides (ride_id, driver_id, ride_distance, ride_duration) values ('20', '1', '121', '92')",
            "insert into AcceptedRides (ride_id, driver_id, ride_distance, ride_duration) values ('5', '7', '42', '101')",
            "insert into AcceptedRides (ride_id, driver_id, ride_distance, ride_duration) values ('2', '4', '6', '38')",
            "insert into AcceptedRides (ride_id, driver_id, ride_distance, ride_duration) values ('11', '8', '37', '43')",
            "insert into AcceptedRides (ride_id, driver_id, ride_distance, ride_duration) values ('15', '8', '108', '82')",
            "insert into AcceptedRides (ride_id, driver_id, ride_distance, ride_duration) values ('12', '8', '38', '34')",
            "insert into AcceptedRides (ride_id, driver_id, ride_distance, ride_duration) values ('14', '1', '90', '74')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "hopper-company-queries-i",
    "playgroundData": null
}