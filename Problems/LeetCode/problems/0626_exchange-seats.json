{
    "id": "626",
    "question": {
        "questionId": "626",
        "questionFrontendId": "626",
        "boundTopicId": null,
        "title": "Exchange Seats",
        "titleSlug": "exchange-seats",
        "content": "<p>Table: <code>Seat</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table indicates the name and the ID of a student.\nid is a continuous increment.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to swap the seat id of every two consecutive students. If the number of students is odd, the id of the last student is not swapped.</p>\n\n<p>Return the result table ordered by <code>id</code> <strong>in ascending order</strong>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nSeat table:\n+----+---------+\n| id | student |\n+----+---------+\n| 1  | Abbot   |\n| 2  | Doris   |\n| 3  | Emerson |\n| 4  | Green   |\n| 5  | Jeames  |\n+----+---------+\n<strong>Output:</strong> \n+----+---------+\n| id | student |\n+----+---------+\n| 1  | Doris   |\n| 2  | Abbot   |\n| 3  | Green   |\n| 4  | Emerson |\n| 5  | Jeames  |\n+----+---------+\n<strong>Explanation:</strong> \nNote that if the number of students is odd, there is no need to change the last one&#39;s seat.\n</pre>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": false,
        "difficulty": "Medium",
        "likes": 718,
        "dislikes": 375,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "{\"headers\": {\"Seat\": [\"id\",\"student\"]}, \"rows\": {\"Seat\": [[1,\"Abbot\"],[2,\"Doris\"],[3,\"Emerson\"],[4,\"Green\"],[5,\"Jeames\"]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"1\": [{\"taggedByAdmin\": false, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 4}], \"3\": [{\"taggedByAdmin\": false, \"name\": \"Microsoft\", \"slug\": \"microsoft\", \"timesEncountered\": 2}, {\"taggedByAdmin\": false, \"name\": \"tiktok\", \"slug\": \"tiktok\", \"timesEncountered\": 2}, {\"taggedByAdmin\": false, \"name\": \"Bloomberg\", \"slug\": \"bloomberg\", \"timesEncountered\": 2}], \"2\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"108.3K\", \"totalSubmission\": \"154.9K\", \"totalAcceptedRaw\": 108270, \"totalSubmissionRaw\": 154901, \"acRate\": \"69.9%\"}",
        "hints": [],
        "solution": {
            "id": "195",
            "canSeeDetail": true,
            "paidOnly": false,
            "hasVideoSolution": false,
            "paidOnlyVideo": true,
            "__typename": "ArticleNode"
        },
        "status": null,
        "sampleTestCase": "{\"headers\": {\"Seat\": [\"id\",\"student\"]}, \"rows\": {\"Seat\": [[1,\"Abbot\"],[2,\"Doris\"],[3,\"Emerson\"],[4,\"Green\"],[5,\"Jeames\"]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Seat (id int, student varchar(255))\"\n  ],\n  \"mssql\": [\n    \"Create table Seat (id int, student varchar(255))\"\n  ],\n  \"oraclesql\": [\n    \"Create table Seat (id int, student varchar(255))\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists Seat (id int, student varchar(255))",
            "Truncate table Seat",
            "insert into Seat (id, student) values ('1', 'Abbot')",
            "insert into Seat (id, student) values ('2', 'Doris')",
            "insert into Seat (id, student) values ('3', 'Emerson')",
            "insert into Seat (id, student) values ('4', 'Green')",
            "insert into Seat (id, student) values ('5', 'Jeames')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": {
        "id": "195",
        "content": "[TOC]\n\n## Solution\n---\n#### Approach I: Using flow control statement `CASE` [Accepted]\n\n**Algorithm**\n\nFor students with odd id, the new id is (id+1) after switch unless it is the last seat. And for students with even id, the new id is (id-1). In order to know how many seats in total, we can use a subquery:\n```sql\nSELECT\n    COUNT(*) AS counts\nFROM\n    seat\n```\n\nThen, we can use the `CASE` statement and `MOD()` function to alter the seat id of each student.\n\n**MySQL**\n\n```sql\nSELECT\n    (CASE\n        WHEN MOD(id, 2) != 0 AND counts != id THEN id + 1\n        WHEN MOD(id, 2) != 0 AND counts = id THEN id\n        ELSE id - 1\n    END) AS id,\n    student\nFROM\n    seat,\n    (SELECT\n        COUNT(*) AS counts\n    FROM\n        seat) AS seat_counts\nORDER BY id ASC;\n```\n\n#### Approach II: Using bit manipulation and `COALESCE()` [Accepted]\n\n**Algorithm**\n\nBit manipulation expression `(id+1)^1-1` can calculate the new id after switch.\n```sql\nSELECT id, (id+1)^1-1, student FROM seat;\n```\n\n```\n| id | (id+1)^1-1 | student |\n|----|------------|---------|\n| 1  | 2          | Abbot   |\n| 2  | 1          | Doris   |\n| 3  | 4          | Emerson |\n| 4  | 3          | Green   |\n| 5  | 6          | Jeames  |\n```\n\nThen, we can make a temp table and join seat with this table like below.\n```sql\nSELECT\n    *\nFROM\n    seat s1\n        LEFT JOIN\n    seat s2 ON (s1.id+1)^1-1 = s2.id\nORDER BY s1.id;\n```\n```\n| id | student | id | student |\n|----|---------|----|---------|\n| 1  | Abbot   | 2  | Doris   |\n| 2  | Doris   | 1  | Abbot   |\n| 3  | Emerson | 4  | Green   |\n| 4  | Green   | 3  | Emerson |\n| 5  | Jeames  |    |         |\n```\n>Note:The first two columns are from s1 and the last two are from s2.\n\nAt last, we can output s1.id and s2.student. However, the s2.student is NULL for seat id '5' but s1.student is right. Thus, we we can use function [`COALESCE()`](https://dev.mysql.com/doc/refman/5.7/en/comparison-operators.html#function_coalesce) to generate the correct output for the last record.\n\n**MySQL**\n\n```sql\nSELECT\n    s1.id, COALESCE(s2.student, s1.student) AS student\nFROM\n    seat s1\n        LEFT JOIN\n    seat s2 ON ((s1.id + 1) ^ 1) - 1 = s2.id\nORDER BY s1.id;\n```\n>Note: This solution comes from [@FANGXIAOFANG](https://discuss.leetcode.com/user/fangxiaofang).",
        "contentTypeId": "107",
        "canSeeDetail": true,
        "paidOnly": false,
        "hasVideoSolution": false,
        "paidOnlyVideo": true,
        "rating": {
            "id": "190",
            "count": 37,
            "average": "4.622",
            "userRating": null,
            "__typename": "RatingNode"
        },
        "__typename": "ArticleNode"
    },
    "questionCode": "exchange-seats",
    "playgroundData": {}
}