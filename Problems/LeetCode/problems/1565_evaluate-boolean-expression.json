{
    "id": "1565",
    "question": {
        "questionId": "1565",
        "questionFrontendId": "1440",
        "boundTopicId": null,
        "title": "Evaluate Boolean Expression",
        "titleSlug": "evaluate-boolean-expression",
        "content": "<p>Table <code>Variables</code>:</p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| name          | varchar |\n| value         | int     |\n+---------------+---------+\nname is the primary key for this table.\nThis table contains the stored variables and their values.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table <code>Expressions</code>:</p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| left_operand  | varchar |\n| operator      | enum    |\n| right_operand | varchar |\n+---------------+---------+\n(left_operand, operator, right_operand) is the primary key for this table.\nThis table contains a boolean expression that should be evaluated.\noperator is an enum that takes one of the values (&#39;&lt;&#39;, &#39;&gt;&#39;, &#39;=&#39;)\nThe values of left_operand and right_operand are guaranteed to be in the Variables table.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to evaluate the boolean expressions in <code>Expressions</code> table.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nVariables table:\n+------+-------+\n| name | value |\n+------+-------+\n| x    | 66    |\n| y    | 77    |\n+------+-------+\nExpressions table:\n+--------------+----------+---------------+\n| left_operand | operator | right_operand |\n+--------------+----------+---------------+\n| x            | &gt;        | y             |\n| x            | &lt;        | y             |\n| x            | =        | y             |\n| y            | &gt;        | x             |\n| y            | &lt;        | x             |\n| x            | =        | x             |\n+--------------+----------+---------------+\n<strong>Output:</strong> \n+--------------+----------+---------------+-------+\n| left_operand | operator | right_operand | value |\n+--------------+----------+---------------+-------+\n| x            | &gt;        | y             | false |\n| x            | &lt;        | y             | true  |\n| x            | =        | y             | false |\n| y            | &gt;        | x             | true  |\n| y            | &lt;        | x             | false |\n| x            | =        | x             | true  |\n+--------------+----------+---------------+-------+\n<strong>Explanation:</strong> \nAs shown, you need to find the value of each boolean expression in the table using the variables table.\n</pre>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Medium",
        "likes": 140,
        "dislikes": 9,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "{\"headers\":{\"Variables\":[\"name\",\"value\"],\"Expressions\":[\"left_operand\",\"operator\",\"right_operand\"]},\"rows\":{\"Variables\":[[\"x\",66],[\"y\",77]],\"Expressions\":[[\"x\",\">\",\"y\"],[\"x\",\"<\",\"y\"],[\"x\",\"=\",\"y\"],[\"y\",\">\",\"x\"],[\"y\",\"<\",\"x\"],[\"x\",\"=\",\"x\"]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"3\": [{\"taggedByAdmin\": true, \"name\": \"Point72\", \"slug\": \"point72\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"14.9K\", \"totalSubmission\": \"19.5K\", \"totalAcceptedRaw\": 14862, \"totalSubmissionRaw\": 19529, \"acRate\": \"76.1%\"}",
        "hints": [],
        "solution": null,
        "status": null,
        "sampleTestCase": "{\"headers\":{\"Variables\":[\"name\",\"value\"],\"Expressions\":[\"left_operand\",\"operator\",\"right_operand\"]},\"rows\":{\"Variables\":[[\"x\",66],[\"y\",77]],\"Expressions\":[[\"x\",\">\",\"y\"],[\"x\",\"<\",\"y\"],[\"x\",\"=\",\"y\"],[\"y\",\">\",\"x\"],[\"y\",\"<\",\"x\"],[\"x\",\"=\",\"x\"]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create Table If Not Exists Variables (name varchar(3), value int)\",\n    \"Create Table If Not Exists Expressions (left_operand varchar(3), operator ENUM('>', '<', '='), right_operand varchar(3))\"\n  ],\n  \"mssql\": [\n    \"Create Table Variables (name varchar(3), value int)\",\n    \"Create Table Expressions (left_operand varchar(3), operator varchar(3) NOT NULL CHECK (operator IN ('>', '<', '=')), right_operand varchar(3))\"\n  ],\n  \"oraclesql\": [\n    \"Create Table Variables (name varchar(3), value int)\",\n    \"Create Table Expressions (left_operand varchar(3), operator varchar(3) NOT NULL CHECK (operator IN ('>', '<', '=')), right_operand varchar(3))\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create Table If Not Exists Variables (name varchar(3), value int)",
            "Create Table If Not Exists Expressions (left_operand varchar(3), operator ENUM('>', '<', '='), right_operand varchar(3))",
            "Truncate table Variables",
            "insert into Variables (name, value) values ('x', '66')",
            "insert into Variables (name, value) values ('y', '77')",
            "Truncate table Expressions",
            "insert into Expressions (left_operand, operator, right_operand) values ('x', '>', 'y')",
            "insert into Expressions (left_operand, operator, right_operand) values ('x', '<', 'y')",
            "insert into Expressions (left_operand, operator, right_operand) values ('x', '=', 'y')",
            "insert into Expressions (left_operand, operator, right_operand) values ('y', '>', 'x')",
            "insert into Expressions (left_operand, operator, right_operand) values ('y', '<', 'x')",
            "insert into Expressions (left_operand, operator, right_operand) values ('x', '=', 'x')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "evaluate-boolean-expression",
    "playgroundData": null
}