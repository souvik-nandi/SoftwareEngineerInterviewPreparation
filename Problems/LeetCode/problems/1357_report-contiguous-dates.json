{
    "id": "1357",
    "question": {
        "questionId": "1357",
        "questionFrontendId": "1225",
        "boundTopicId": null,
        "title": "Report Contiguous Dates",
        "titleSlug": "report-contiguous-dates",
        "content": "<p>Table: <code>Failed</code></p>\n\n<pre>\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| fail_date    | date    |\n+--------------+---------+\nfail_date is the primary key for this table.\nThis table contains the days of failed tasks.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Succeeded</code></p>\n\n<pre>\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| success_date | date    |\n+--------------+---------+\nsuccess_date is the primary key for this table.\nThis table contains the days of succeeded tasks.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>A system is running one task <strong>every day</strong>. Every task is independent of the previous tasks. The tasks can fail or succeed.</p>\n\n<p>Write an SQL query to generate a report of <code>period_state</code> for each continuous interval of days in the period from <code>2019-01-01</code> to <code>2019-12-31</code>.</p>\n\n<p><code>period_state</code> is <em>&#39;</em><code>failed&#39;</code><em> </em>if tasks in this interval failed or <code>&#39;succeeded&#39;</code> if tasks in this interval succeeded. Interval of days are retrieved as <code>start_date</code> and <code>end_date.</code></p>\n\n<p>Return the result table ordered by <code>start_date</code>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nFailed table:\n+-------------------+\n| fail_date         |\n+-------------------+\n| 2018-12-28        |\n| 2018-12-29        |\n| 2019-01-04        |\n| 2019-01-05        |\n+-------------------+\nSucceeded table:\n+-------------------+\n| success_date      |\n+-------------------+\n| 2018-12-30        |\n| 2018-12-31        |\n| 2019-01-01        |\n| 2019-01-02        |\n| 2019-01-03        |\n| 2019-01-06        |\n+-------------------+\n<strong>Output:</strong> \n+--------------+--------------+--------------+\n| period_state | start_date   | end_date     |\n+--------------+--------------+--------------+\n| succeeded    | 2019-01-01   | 2019-01-03   |\n| failed       | 2019-01-04   | 2019-01-05   |\n| succeeded    | 2019-01-06   | 2019-01-06   |\n+--------------+--------------+--------------+\n<strong>Explanation:</strong> \nThe report ignored the system state in 2018 as we care about the system in the period 2019-01-01 to 2019-12-31.\nFrom 2019-01-01 to 2019-01-03 all tasks succeeded and the system state was &quot;succeeded&quot;.\nFrom 2019-01-04 to 2019-01-05 all tasks failed and the system state was &quot;failed&quot;.\nFrom 2019-01-06 to 2019-01-06 all tasks succeeded and the system state was &quot;succeeded&quot;.\n</pre>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Hard",
        "likes": 234,
        "dislikes": 18,
        "isLiked": null,
        "similarQuestions": "[{\"title\": \"Find the Start and End Number of Continuous Ranges\", \"titleSlug\": \"find-the-start-and-end-number-of-continuous-ranges\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Missing IDs\", \"titleSlug\": \"find-the-missing-ids\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "exampleTestcases": "{\"headers\":{\"Failed\":[\"fail_date\"],\"Succeeded\":[\"success_date\"]},\"rows\":{\"Failed\":[[\"2018-12-28\"],[\"2018-12-29\"],[\"2019-01-04\"],[\"2019-01-05\"]],\"Succeeded\":[[\"2018-12-30\"],[\"2018-12-31\"],[\"2019-01-01\"],[\"2019-01-02\"],[\"2019-01-03\"],[\"2019-01-06\"]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"3\": [{\"taggedByAdmin\": false, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 2}, {\"taggedByAdmin\": true, \"name\": \"Facebook\", \"slug\": \"facebook\", \"timesEncountered\": 0}], \"1\": [], \"2\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"14.9K\", \"totalSubmission\": \"23.5K\", \"totalAcceptedRaw\": 14930, \"totalSubmissionRaw\": 23470, \"acRate\": \"63.6%\"}",
        "hints": [],
        "solution": null,
        "status": null,
        "sampleTestCase": "{\"headers\":{\"Failed\":[\"fail_date\"],\"Succeeded\":[\"success_date\"]},\"rows\":{\"Failed\":[[\"2018-12-28\"],[\"2018-12-29\"],[\"2019-01-04\"],[\"2019-01-05\"]],\"Succeeded\":[[\"2018-12-30\"],[\"2018-12-31\"],[\"2019-01-01\"],[\"2019-01-02\"],[\"2019-01-03\"],[\"2019-01-06\"]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Failed (fail_date date)\",\n    \"Create table If Not Exists Succeeded (success_date date)\"\n  ],\n  \"mssql\": [\n    \"Create table Failed (fail_date date)\",\n    \"Create table Succeeded (success_date date)\\n\"\n  ],\n  \"oraclesql\": [\n    \"Create table Failed (fail_date date)\",\n    \"Create table Succeeded (success_date date)\\n\",\n    \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists Failed (fail_date date)",
            "Create table If Not Exists Succeeded (success_date date)",
            "Truncate table Failed",
            "insert into Failed (fail_date) values ('2018-12-28')",
            "insert into Failed (fail_date) values ('2018-12-29')",
            "insert into Failed (fail_date) values ('2019-01-04')",
            "insert into Failed (fail_date) values ('2019-01-05')",
            "Truncate table Succeeded",
            "insert into Succeeded (success_date) values ('2018-12-30')",
            "insert into Succeeded (success_date) values ('2018-12-31')",
            "insert into Succeeded (success_date) values ('2019-01-01')",
            "insert into Succeeded (success_date) values ('2019-01-02')",
            "insert into Succeeded (success_date) values ('2019-01-03')",
            "insert into Succeeded (success_date) values ('2019-01-06')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "report-contiguous-dates",
    "playgroundData": null
}