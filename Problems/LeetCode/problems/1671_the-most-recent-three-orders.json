{
    "id": "1671",
    "question": {
        "questionId": "1671",
        "questionFrontendId": "1532",
        "boundTopicId": null,
        "title": "The Most Recent Three Orders",
        "titleSlug": "the-most-recent-three-orders",
        "content": "<p>Table: <code>Customers</code></p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| customer_id   | int     |\n| name          | varchar |\n+---------------+---------+\ncustomer_id is the primary key for this table.\nThis table contains information about customers.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Table: <code>Orders</code></p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| order_id      | int     |\n| order_date    | date    |\n| customer_id   | int     |\n| cost          | int     |\n+---------------+---------+\norder_id is the primary key for this table.\nThis table contains information about the orders made by customer_id.\nEach customer has <strong>one order per day</strong>.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to find the most recent three orders of each user. If a user ordered less than three orders, return all of their orders.</p>\n\n<p>Return the result table ordered by <code>customer_name</code> in <strong>ascending order</strong> and in case of a tie by the <code>customer_id</code> in <strong>ascending order</strong>. If there is still a tie, order them by <code>order_date</code> in <strong>descending order</strong>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nCustomers table:\n+-------------+-----------+\n| customer_id | name      |\n+-------------+-----------+\n| 1           | Winston   |\n| 2           | Jonathan  |\n| 3           | Annabelle |\n| 4           | Marwan    |\n| 5           | Khaled    |\n+-------------+-----------+\nOrders table:\n+----------+------------+-------------+------+\n| order_id | order_date | customer_id | cost |\n+----------+------------+-------------+------+\n| 1        | 2020-07-31 | 1           | 30   |\n| 2        | 2020-07-30 | 2           | 40   |\n| 3        | 2020-07-31 | 3           | 70   |\n| 4        | 2020-07-29 | 4           | 100  |\n| 5        | 2020-06-10 | 1           | 1010 |\n| 6        | 2020-08-01 | 2           | 102  |\n| 7        | 2020-08-01 | 3           | 111  |\n| 8        | 2020-08-03 | 1           | 99   |\n| 9        | 2020-08-07 | 2           | 32   |\n| 10       | 2020-07-15 | 1           | 2    |\n+----------+------------+-------------+------+\n<strong>Output:</strong> \n+---------------+-------------+----------+------------+\n| customer_name | customer_id | order_id | order_date |\n+---------------+-------------+----------+------------+\n| Annabelle     | 3           | 7        | 2020-08-01 |\n| Annabelle     | 3           | 3        | 2020-07-31 |\n| Jonathan      | 2           | 9        | 2020-08-07 |\n| Jonathan      | 2           | 6        | 2020-08-01 |\n| Jonathan      | 2           | 2        | 2020-07-30 |\n| Marwan        | 4           | 4        | 2020-07-29 |\n| Winston       | 1           | 8        | 2020-08-03 |\n| Winston       | 1           | 1        | 2020-07-31 |\n| Winston       | 1           | 10       | 2020-07-15 |\n+---------------+-------------+----------+------------+\n<strong>Explanation:</strong> \nWinston has 4 orders, we discard the order of &quot;2020-06-10&quot; because it is the oldest order.\nAnnabelle has only 2 orders, we return them.\nJonathan has exactly 3 orders.\nMarwan ordered only one time.\nWe sort the result table by customer_name in ascending order, by customer_id in ascending order, and by order_date in descending order in case of a tie.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Follow up:</strong> Could you write a general solution for the most recent <code>n</code> orders?</p>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Medium",
        "likes": 101,
        "dislikes": 9,
        "isLiked": null,
        "similarQuestions": "[{\"title\": \"The Most Recent Orders for Each Product\", \"titleSlug\": \"the-most-recent-orders-for-each-product\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "exampleTestcases": "{\"headers\":{\"Customers\":[\"customer_id\",\"name\"],\"Orders\":[\"order_id\",\"order_date\",\"customer_id\",\"cost\"]},\"rows\":{\"Customers\":[[1,\"Winston\"],[2,\"Jonathan\"],[3,\"Annabelle\"],[4,\"Marwan\"],[5,\"Khaled\"]],\"Orders\":[[1,\"2020-07-31\",1,30],[2,\"2020-7-30\",2,40],[3,\"2020-07-31\",3,70],[4,\"2020-07-29\",4,100],[5,\"2020-06-10\",1,1010],[6,\"2020-08-01\",2,102],[7,\"2020-08-01\",3,111],[8,\"2020-08-03\",1,99],[9,\"2020-08-07\",2,32],[10,\"2020-07-15\",1,2]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"1\": [], \"2\": [], \"3\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"17.3K\", \"totalSubmission\": \"24.3K\", \"totalAcceptedRaw\": 17263, \"totalSubmissionRaw\": 24308, \"acRate\": \"71.0%\"}",
        "hints": [],
        "solution": null,
        "status": null,
        "sampleTestCase": "{\"headers\":{\"Customers\":[\"customer_id\",\"name\"],\"Orders\":[\"order_id\",\"order_date\",\"customer_id\",\"cost\"]},\"rows\":{\"Customers\":[[1,\"Winston\"],[2,\"Jonathan\"],[3,\"Annabelle\"],[4,\"Marwan\"],[5,\"Khaled\"]],\"Orders\":[[1,\"2020-07-31\",1,30],[2,\"2020-7-30\",2,40],[3,\"2020-07-31\",3,70],[4,\"2020-07-29\",4,100],[5,\"2020-06-10\",1,1010],[6,\"2020-08-01\",2,102],[7,\"2020-08-01\",3,111],[8,\"2020-08-03\",1,99],[9,\"2020-08-07\",2,32],[10,\"2020-07-15\",1,2]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Customers (customer_id int, name varchar(10))\",\n    \"Create table If Not Exists Orders (order_id int, order_date date, customer_id int, cost int)\"\n  ],\n  \"mssql\": [\n    \"Create table Customers (customer_id int, name varchar(10))\",\n    \"Create table Orders (order_id int, order_date date, customer_id int, cost int)\"\n  ],\n  \"oraclesql\": [\n    \"Create table Customers (customer_id int, name varchar(10))\",\n    \"Create table Orders (order_id int, order_date date, customer_id int, cost int)\",\n    \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists Customers (customer_id int, name varchar(10))",
            "Create table If Not Exists Orders (order_id int, order_date date, customer_id int, cost int)",
            "Truncate table Customers",
            "insert into Customers (customer_id, name) values ('1', 'Winston')",
            "insert into Customers (customer_id, name) values ('2', 'Jonathan')",
            "insert into Customers (customer_id, name) values ('3', 'Annabelle')",
            "insert into Customers (customer_id, name) values ('4', 'Marwan')",
            "insert into Customers (customer_id, name) values ('5', 'Khaled')",
            "Truncate table Orders",
            "insert into Orders (order_id, order_date, customer_id, cost) values ('1', '2020-07-31', '1', '30')",
            "insert into Orders (order_id, order_date, customer_id, cost) values ('2', '2020-7-30', '2', '40')",
            "insert into Orders (order_id, order_date, customer_id, cost) values ('3', '2020-07-31', '3', '70')",
            "insert into Orders (order_id, order_date, customer_id, cost) values ('4', '2020-07-29', '4', '100')",
            "insert into Orders (order_id, order_date, customer_id, cost) values ('5', '2020-06-10', '1', '1010')",
            "insert into Orders (order_id, order_date, customer_id, cost) values ('6', '2020-08-01', '2', '102')",
            "insert into Orders (order_id, order_date, customer_id, cost) values ('7', '2020-08-01', '3', '111')",
            "insert into Orders (order_id, order_date, customer_id, cost) values ('8', '2020-08-03', '1', '99')",
            "insert into Orders (order_id, order_date, customer_id, cost) values ('9', '2020-08-07', '2', '32')",
            "insert into Orders (order_id, order_date, customer_id, cost) values ('10', '2020-07-15', '1', '2')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "the-most-recent-three-orders",
    "playgroundData": null
}