{
    "id": "2446",
    "question": {
        "questionId": "2446",
        "questionFrontendId": "2314",
        "boundTopicId": null,
        "title": "The First Day of the Maximum Recorded Degree in Each City",
        "titleSlug": "the-first-day-of-the-maximum-recorded-degree-in-each-city",
        "content": "<p>Table: <code>Weather</code></p>\n\n<pre>\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| city_id     | int  |\n| day         | date |\n| degree      | int  |\n+-------------+------+\n(city_id, day) is the primary key for this table.\nEach row in this table contains the degree of the weather of a city on a certain day.\nAll the degrees are recorded in the year 2022.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an&nbsp;SQL query to report the day that has the maximum recorded degree in each city. If the maximum degree was recorded for the same city multiple times, return the earliest day among them.</p>\n\n<p>Return the result table ordered by <code>city_id</code> in <strong>ascending order</strong>.</p>\n\n<p>The query result format is shown in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nWeather table:\n+---------+------------+--------+\n| city_id | day        | degree |\n+---------+------------+--------+\n| 1       | 2022-01-07 | -12    |\n| 1       | 2022-03-07 | 5      |\n| 1       | 2022-07-07 | 24     |\n| 2       | 2022-08-07 | 37     |\n| 2       | 2022-08-17 | 37     |\n| 3       | 2022-02-07 | -7     |\n| 3       | 2022-12-07 | -6     |\n+---------+------------+--------+\n<strong>Output:</strong> \n+---------+------------+--------+\n| city_id | day        | degree |\n+---------+------------+--------+\n| 1       | 2022-07-07 | 24     |\n| 2       | 2022-08-07 | 37     |\n| 3       | 2022-12-07 | -6     |\n+---------+------------+--------+\n<strong>Explanation:</strong> \nFor city 1, the maximum degree was recorded on 2022-07-07 with 24 degrees.\nFor city 1, the maximum degree was recorded on 2022-08-07 and 2022-08-17 with 37 degrees. We choose the earlier date (2022-08-07).\nFor city 3, the maximum degree was recorded on 2022-12-07 with -6 degrees.\n</pre>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Medium",
        "likes": 10,
        "dislikes": 2,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "{\"headers\": {\"Weather\": [\"city_id\", \"day\", \"degree\"]}, \"rows\": {\"Weather\": [[1, \"2022-01-07\", -12], [1, \"2022-03-07\", 5], [1, \"2022-07-07\", 24], [2, \"2022-08-07\", 37], [2, \"2022-08-17\", 37], [3, \"2022-02-07\", -7], [3, \"2022-12-07\", -6]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"1\": [], \"2\": [], \"3\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"542\", \"totalSubmission\": \"687\", \"totalAcceptedRaw\": 542, \"totalSubmissionRaw\": 687, \"acRate\": \"78.9%\"}",
        "hints": [],
        "solution": null,
        "status": null,
        "sampleTestCase": "{\"headers\": {\"Weather\": [\"city_id\", \"day\", \"degree\"]}, \"rows\": {\"Weather\": [[1, \"2022-01-07\", -12], [1, \"2022-03-07\", 5], [1, \"2022-07-07\", 24], [2, \"2022-08-07\", 37], [2, \"2022-08-17\", 37], [3, \"2022-02-07\", -7], [3, \"2022-12-07\", -6]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Weather (city_id int, day date, degree int)\"\n  ],\n  \"mssql\": [\n    \"Create table Weather (city_id int, day date, degree int)\"\n  ],\n  \"oraclesql\": [\n    \"Create table Weather (city_id int, day date, degree int)\",\n    \"ALTER SESSION SET nls_date_format='YYYY-MM-DD'\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists Weather (city_id int, day date, degree int)",
            "Truncate table Weather",
            "insert into Weather (city_id, day, degree) values ('1', '2022-01-07', '-12')",
            "insert into Weather (city_id, day, degree) values ('1', '2022-03-07', '5')",
            "insert into Weather (city_id, day, degree) values ('1', '2022-07-07', '24')",
            "insert into Weather (city_id, day, degree) values ('2', '2022-08-07', '37')",
            "insert into Weather (city_id, day, degree) values ('2', '2022-08-17', '37')",
            "insert into Weather (city_id, day, degree) values ('3', '2022-02-07', '-7')",
            "insert into Weather (city_id, day, degree) values ('3', '2022-12-07', '-6')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "the-first-day-of-the-maximum-recorded-degree-in-each-city",
    "playgroundData": null
}