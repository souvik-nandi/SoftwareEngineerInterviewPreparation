{
    "id": "1405",
    "question": {
        "questionId": "1405",
        "questionFrontendId": "1270",
        "boundTopicId": null,
        "title": "All People Report to the Given Manager",
        "titleSlug": "all-people-report-to-the-given-manager",
        "content": "<p>Table: <code>Employees</code></p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| employee_id   | int     |\n| employee_name | varchar |\n| manager_id    | int     |\n+---------------+---------+\nemployee_id is the primary key for this table.\nEach row of this table indicates that the employee with ID employee_id and name employee_name reports his work to his/her direct manager with manager_id\nThe head of the company is the employee with employee_id = 1.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to find <code>employee_id</code> of all employees that directly or indirectly report their work to the head of the company.</p>\n\n<p>The indirect relation between managers <strong>will not exceed three managers</strong> as the company is small.</p>\n\n<p>Return the result table in <strong>any order</strong>.</p>\n\n<p>The query result format is in the following example.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nEmployees table:\n+-------------+---------------+------------+\n| employee_id | employee_name | manager_id |\n+-------------+---------------+------------+\n| 1           | Boss          | 1          |\n| 3           | Alice         | 3          |\n| 2           | Bob           | 1          |\n| 4           | Daniel        | 2          |\n| 7           | Luis          | 4          |\n| 8           | Jhon          | 3          |\n| 9           | Angela        | 8          |\n| 77          | Robert        | 1          |\n+-------------+---------------+------------+\n<strong>Output:</strong> \n+-------------+\n| employee_id |\n+-------------+\n| 2           |\n| 77          |\n| 4           |\n| 7           |\n+-------------+\n<strong>Explanation:</strong> \nThe head of the company is the employee with employee_id 1.\nThe employees with employee_id 2 and 77 report their work directly to the head of the company.\nThe employee with employee_id 4 reports their work indirectly to the head of the company 4 --&gt; 2 --&gt; 1. \nThe employee with employee_id 7 reports their work indirectly to the head of the company 7 --&gt; 4 --&gt; 2 --&gt; 1.\nThe employees with employee_id 3, 8, and 9 do not report their work to the head of the company directly or indirectly. \n</pre>\n",
        "translatedTitle": null,
        "translatedContent": null,
        "isPaidOnly": true,
        "difficulty": "Medium",
        "likes": 308,
        "dislikes": 23,
        "isLiked": null,
        "similarQuestions": "[]",
        "exampleTestcases": "{\"headers\":{\"Employees\":[\"employee_id\",\"employee_name\",\"manager_id\"]},\"rows\":{\"Employees\":[[1,\"Boss\",1],[3,\"Alice\",3],[2,\"Bob\",1],[4,\"Daniel\",2],[7,\"Luis\",4],[8,\"John\",3],[9,\"Angela\",8],[77,\"Robert\",1]]}}",
        "categoryTitle": "Database",
        "contributors": [],
        "topicTags": [
            {
                "name": "Database",
                "slug": "database",
                "translatedName": null,
                "__typename": "TopicTagNode"
            }
        ],
        "companyTagStats": "{\"2\": [{\"taggedByAdmin\": true, \"name\": \"Google\", \"slug\": \"google\", \"timesEncountered\": 2}], \"3\": [{\"taggedByAdmin\": false, \"name\": \"Amazon\", \"slug\": \"amazon\", \"timesEncountered\": 5}], \"1\": []}",
        "codeSnippets": [
            {
                "lang": "MySQL",
                "langSlug": "mysql",
                "code": "# Write your MySQL query statement below\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "MS SQL Server",
                "langSlug": "mssql",
                "code": "/* Write your T-SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            },
            {
                "lang": "Oracle",
                "langSlug": "oraclesql",
                "code": "/* Write your PL/SQL query statement below */\n",
                "__typename": "CodeSnippetNode"
            }
        ],
        "stats": "{\"totalAccepted\": \"40.6K\", \"totalSubmission\": \"46.2K\", \"totalAcceptedRaw\": 40602, \"totalSubmissionRaw\": 46168, \"acRate\": \"87.9%\"}",
        "hints": [],
        "solution": null,
        "status": null,
        "sampleTestCase": "{\"headers\":{\"Employees\":[\"employee_id\",\"employee_name\",\"manager_id\"]},\"rows\":{\"Employees\":[[1,\"Boss\",1],[3,\"Alice\",3],[2,\"Bob\",1],[4,\"Daniel\",2],[7,\"Luis\",4],[8,\"John\",3],[9,\"Angela\",8],[77,\"Robert\",1]]}}",
        "metaData": "{\n  \"mysql\": [\n    \"Create table If Not Exists Employees (employee_id int, employee_name varchar(30), manager_id int)\"\n  ],\n  \"mssql\": [\n    \"Create table Employees (employee_id int, employee_name varchar(30), manager_id int)\"\n  ],\n  \"oraclesql\": [\n    \"Create table Employees (employee_id int, employee_name varchar(30), manager_id int)\"\n  ],\n  \"database\": true\n}",
        "judgerAvailable": true,
        "judgeType": "large",
        "mysqlSchemas": [
            "Create table If Not Exists Employees (employee_id int, employee_name varchar(30), manager_id int)",
            "Truncate table Employees",
            "insert into Employees (employee_id, employee_name, manager_id) values ('1', 'Boss', '1')",
            "insert into Employees (employee_id, employee_name, manager_id) values ('3', 'Alice', '3')",
            "insert into Employees (employee_id, employee_name, manager_id) values ('2', 'Bob', '1')",
            "insert into Employees (employee_id, employee_name, manager_id) values ('4', 'Daniel', '2')",
            "insert into Employees (employee_id, employee_name, manager_id) values ('7', 'Luis', '4')",
            "insert into Employees (employee_id, employee_name, manager_id) values ('8', 'John', '3')",
            "insert into Employees (employee_id, employee_name, manager_id) values ('9', 'Angela', '8')",
            "insert into Employees (employee_id, employee_name, manager_id) values ('77', 'Robert', '1')"
        ],
        "enableRunCode": true,
        "enableTestMode": false,
        "enableDebugger": false,
        "envInfo": "{\"mysql\": [\"MySQL\", \"<p><code>MySQL 8.0</code>.</p>\"], \"mssql\": [\"MS SQL Server\", \"<p><code>mssql server 2019</code>.</p>\"], \"oraclesql\": [\"Oracle\", \"<p><code>Oracle Sql 11.2</code>.</p>\"]}",
        "libraryUrl": null,
        "adminUrl": null,
        "challengeQuestion": null,
        "__typename": "QuestionNode"
    },
    "solution": null,
    "questionCode": "all-people-report-to-the-given-manager",
    "playgroundData": null
}